{"version":3,"file":"index.esm.js","sources":["../src/utils/isCheckBoxInput.ts","../src/utils/isDateObject.ts","../src/utils/isNullOrUndefined.ts","../src/utils/isObject.ts","../src/logic/getControllerValue.ts","../src/logic/getNodeParentName.ts","../src/logic/isNameInFieldArray.ts","../src/utils/compact.ts","../src/utils/isUndefined.ts","../src/utils/get.ts","../src/constants.ts","../src/utils/omit.ts","../src/useFormContext.tsx","../src/logic/getProxyFormState.ts","../src/utils/isEmptyObject.ts","../src/logic/shouldRenderFormState.ts","../src/utils/convertToArrayPayload.ts","../src/useFormState.ts","../src/utils/isKey.ts","../src/utils/stringToPath.ts","../src/utils/set.ts","../src/useController.ts","../src/controller.tsx","../src/logic/appendErrors.ts","../src/logic/focusFieldBy.ts","../src/logic/getFocusFieldName.ts","../src/logic/mapCurrentIds.ts","../src/logic/generateId.ts","../src/logic/mapId.ts","../src/utils/append.ts","../src/utils/fillEmptyArray.ts","../src/utils/insert.ts","../src/utils/move.ts","../src/utils/prepend.ts","../src/utils/remove.ts","../src/utils/swap.ts","../src/utils/update.ts","../src/useFieldArray.ts","../src/utils/cloneObject.ts","../src/utils/isPrimitive.ts","../src/utils/deepEqual.ts","../src/utils/getValidationModes.ts","../src/utils/isFileInput.ts","../src/utils/isFunction.ts","../src/utils/isHTMLElement.ts","../src/utils/isMultipleSelect.ts","../src/utils/isRadioInput.ts","../src/utils/isRadioOrCheckbox.ts","../src/utils/isString.ts","../src/utils/isWeb.ts","../src/utils/live.ts","../src/utils/omitKeys.ts","../src/utils/Subject.ts","../src/utils/isBoolean.ts","../src/utils/unset.ts","../src/logic/getCheckboxValue.ts","../src/logic/getFieldValueAs.ts","../src/logic/getMultipleSelectValue.ts","../src/logic/getRadioValue.ts","../src/logic/getFieldValue.ts","../src/logic/getResolverOptions.ts","../src/logic/hasValidation.ts","../src/utils/deepMerge.ts","../src/logic/setFieldArrayDirtyFields.ts","../src/logic/skipValidation.ts","../src/logic/unsetEmptyArray.ts","../src/utils/isMessage.ts","../src/utils/isRegex.ts","../src/logic/getValidateError.ts","../src/logic/getValueAndMessage.ts","../src/logic/validateField.ts","../src/logic/createFormControl.ts","../src/useForm.ts","../src/useWatch.ts"],"sourcesContent":["import { FieldElement } from '../types';\r\n\r\nexport default (element: FieldElement): element is HTMLInputElement =>\r\n  element.type === 'checkbox';\r\n","export default (data: unknown) => data instanceof Date;\r\n","export default (value: unknown): value is null | undefined => value == null;\r\n","import isDateObject from './isDateObject';\r\nimport isNullOrUndefined from './isNullOrUndefined';\r\n\r\nexport const isObjectType = (value: unknown) => typeof value === 'object';\r\n\r\nexport default <T extends object>(value: unknown): value is T =>\r\n  !isNullOrUndefined(value) &&\r\n  !Array.isArray(value) &&\r\n  isObjectType(value) &&\r\n  !isDateObject(value);\r\n","import isCheckBoxInput from '../utils/isCheckBoxInput';\r\nimport isObject from '../utils/isObject';\r\n\r\ntype Event = { target: any };\r\n\r\nexport default (event: unknown) =>\r\n  isObject(event) && (event as Event).target\r\n    ? isCheckBoxInput((event as Event).target)\r\n      ? (event as Event).target.checked\r\n      : (event as Event).target.value\r\n    : event;\r\n","export default (name: string) => name.substring(0, name.search(/.\\d/)) || name;\r\n","import { InternalFieldName } from '../types';\r\n\r\nimport getNodeParentName from './getNodeParentName';\r\n\r\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\r\n  [...names].some((current) => getNodeParentName(name) === current);\r\n","export default (value: any[]) => value.filter(Boolean);\r\n","export default (val: unknown): val is undefined => val === undefined;\r\n","import compact from './compact';\r\nimport isNullOrUndefined from './isNullOrUndefined';\r\nimport isObject from './isObject';\r\nimport isUndefined from './isUndefined';\r\n\r\nexport default <T extends unknown>(\r\n  obj: T,\r\n  path: string,\r\n  defaultValue?: unknown,\r\n) => {\r\n  if (isObject(obj) && path) {\r\n    const result = compact(path.split(/[,[\\].]+?/)).reduce(\r\n      (result, key) => (isNullOrUndefined(result) ? result : result[key]),\r\n      obj,\r\n    );\r\n\r\n    return isUndefined(result) || result === obj\r\n      ? isUndefined(obj[path as keyof T])\r\n        ? defaultValue\r\n        : obj[path as keyof T]\r\n      : result;\r\n  }\r\n\r\n  return undefined;\r\n};\r\n","import { ValidationMode } from './types';\r\n\r\nexport const EVENTS = {\r\n  BLUR: 'blur',\r\n  CHANGE: 'change',\r\n};\r\n\r\nexport const VALIDATION_MODE: ValidationMode = {\r\n  onBlur: 'onBlur',\r\n  onChange: 'onChange',\r\n  onSubmit: 'onSubmit',\r\n  onTouched: 'onTouched',\r\n  all: 'all',\r\n};\r\n\r\nexport const INPUT_VALIDATION_RULES = {\r\n  max: 'max',\r\n  min: 'min',\r\n  maxLength: 'maxLength',\r\n  minLength: 'minLength',\r\n  maxDate: 'maxDate',\r\n  minDate: 'minDate',\r\n  pattern: 'pattern',\r\n  required: 'required',\r\n  validate: 'validate',\r\n};\r\n","export default <Key extends string, T extends Record<Key, any>>(\r\n  source: T,\r\n  key: Key,\r\n): Omit<T, Key> => {\r\n  const copy = { ...source };\r\n  delete copy[key];\r\n\r\n  return copy;\r\n};\r\n","import * as React from 'react';\r\n\r\nimport omit from './utils/omit';\r\nimport { FieldValues, FormProviderProps, UseFormReturn } from './types';\r\n\r\nconst FormContext = React.createContext<UseFormReturn | null>(null);\r\n\r\nFormContext.displayName = 'RHFContext';\r\n\r\nexport const useFormContext = <\r\n  TFieldValues extends FieldValues,\r\n>(): UseFormReturn<TFieldValues> =>\r\n  React.useContext(FormContext) as unknown as UseFormReturn<TFieldValues>;\r\n\r\nexport const FormProvider = <\r\n  TFieldValues extends FieldValues,\r\n  TContext extends object = object,\r\n>(\r\n  props: FormProviderProps<TFieldValues, TContext>,\r\n) => (\r\n  <FormContext.Provider\r\n    value={omit(props, 'children') as unknown as UseFormReturn}\r\n  >\r\n    {props.children}\r\n  </FormContext.Provider>\r\n);\r\n","import { VALIDATION_MODE } from '../constants';\r\nimport { FormState, FormStateProxy, ReadFormState } from '../types';\r\n\r\nexport default <TFieldValues>(\r\n  formState: FormState<TFieldValues>,\r\n  _proxyFormState: ReadFormState,\r\n  localProxyFormState?: ReadFormState,\r\n  isRoot = true,\r\n) => {\r\n  function createGetter(prop: keyof FormStateProxy) {\r\n    return () => {\r\n      if (prop in formState) {\r\n        if (_proxyFormState[prop] !== VALIDATION_MODE.all) {\r\n          _proxyFormState[prop] = !isRoot || VALIDATION_MODE.all;\r\n        }\r\n        localProxyFormState && (localProxyFormState[prop] = true);\r\n        return formState[prop];\r\n      }\r\n      return undefined;\r\n    };\r\n  }\r\n\r\n  const result = {} as any as typeof formState;\r\n  for (const key in formState) {\r\n    Object.defineProperty(result, key, {\r\n      get: createGetter(key as keyof FormStateProxy),\r\n    });\r\n  }\r\n\r\n  return result;\r\n};\r\n","import { EmptyObject } from '../types';\r\n\r\nimport isObject from './isObject';\r\n\r\nexport default (value: unknown): value is EmptyObject =>\r\n  isObject(value) && !Object.keys(value).length;\r\n","import { VALIDATION_MODE } from '../constants';\r\nimport { ReadFormState } from '../types';\r\nimport isEmptyObject from '../utils/isEmptyObject';\r\nimport omit from '../utils/omit';\r\n\r\nexport default <T extends Record<string, any>, K extends ReadFormState>(\r\n  formStateData: T,\r\n  _proxyFormState: K,\r\n  isRoot?: boolean,\r\n) => {\r\n  const formState = omit(formStateData, 'name');\r\n\r\n  return (\r\n    isEmptyObject(formState) ||\r\n    Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\r\n    Object.keys(formState).find(\r\n      (key) =>\r\n        _proxyFormState[key as keyof ReadFormState] ===\r\n        (!isRoot || VALIDATION_MODE.all),\r\n    )\r\n  );\r\n};\r\n","export default <T extends unknown>(value: T) =>\r\n  Array.isArray(value) ? value : [value];\r\n","import * as React from 'react';\r\n\r\nimport getProxyFormState from './logic/getProxyFormState';\r\nimport shouldRenderFormState from './logic/shouldRenderFormState';\r\nimport convertToArrayPayload from './utils/convertToArrayPayload';\r\nimport {\r\n  FieldValues,\r\n  FormState,\r\n  InternalFieldName,\r\n  UseFormStateProps,\r\n  UseFormStateReturn,\r\n} from './types';\r\nimport { useFormContext } from './useFormContext';\r\n\r\nfunction useFormState<TFieldValues extends FieldValues = FieldValues>(\r\n  props?: UseFormStateProps<TFieldValues>,\r\n): UseFormStateReturn<TFieldValues> {\r\n  const methods = useFormContext();\r\n  const { control = methods.control, disabled, name } = props || {};\r\n  const nameRef = React.useRef<InternalFieldName>(name as InternalFieldName);\r\n  const [formState, updateFormState] = React.useState(control._formState.val);\r\n  const _localProxyFormState = React.useRef({\r\n    isDirty: false,\r\n    dirtyFields: false,\r\n    touchedFields: false,\r\n    isValidating: false,\r\n    isValid: false,\r\n    errors: false,\r\n  });\r\n  nameRef.current = name as InternalFieldName;\r\n\r\n  React.useEffect(() => {\r\n    const formStateSubscription = control._subjects.state.subscribe({\r\n      next: (formState) =>\r\n        (!nameRef.current ||\r\n          !formState.name ||\r\n          convertToArrayPayload(nameRef.current).includes(formState.name)) &&\r\n        shouldRenderFormState(formState, _localProxyFormState.current) &&\r\n        updateFormState({\r\n          ...control._formState.val,\r\n          ...formState,\r\n        }),\r\n    });\r\n\r\n    disabled && formStateSubscription.unsubscribe();\r\n\r\n    return () => formStateSubscription.unsubscribe();\r\n  }, [disabled, control]);\r\n\r\n  return getProxyFormState(\r\n    formState as FormState<TFieldValues>,\r\n    control._proxyFormState,\r\n    _localProxyFormState.current,\r\n    false,\r\n  );\r\n}\r\n\r\nexport { useFormState };\r\n","export default (value: string) => /^\\w*$/.test(value);\r\n","import compact from './compact';\r\n\r\nexport default (input: string): string[] =>\r\n  compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\r\n","import { FieldValues } from '../types';\r\n\r\nimport isKey from './isKey';\r\nimport isObject from './isObject';\r\nimport stringToPath from './stringToPath';\r\n\r\nexport default function set(\r\n  object: FieldValues,\r\n  path: string,\r\n  value?: unknown,\r\n) {\r\n  let index = -1;\r\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\r\n  const length = tempPath.length;\r\n  const lastIndex = length - 1;\r\n\r\n  while (++index < length) {\r\n    const key = tempPath[index];\r\n    let newValue = value;\r\n\r\n    if (index !== lastIndex) {\r\n      const objValue = object[key];\r\n      newValue =\r\n        isObject(objValue) || Array.isArray(objValue)\r\n          ? objValue\r\n          : !isNaN(+tempPath[index + 1])\r\n          ? []\r\n          : {};\r\n    }\r\n    object[key] = newValue;\r\n    object = object[key];\r\n  }\r\n  return object;\r\n}\r\n","import * as React from 'react';\r\n\r\nimport getControllerValue from './logic/getControllerValue';\r\nimport isNameInFieldArray from './logic/isNameInFieldArray';\r\nimport get from './utils/get';\r\nimport { EVENTS } from './constants';\r\nimport {\r\n  Field,\r\n  FieldPath,\r\n  FieldValues,\r\n  InternalFieldName,\r\n  UseControllerProps,\r\n  UseControllerReturn,\r\n} from './types';\r\nimport { useFormContext } from './useFormContext';\r\nimport { useFormState } from './useFormState';\r\nimport { set } from './utils';\r\n\r\nexport function useController<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\r\n>(\r\n  props: UseControllerProps<TFieldValues, TName>,\r\n): UseControllerReturn<TFieldValues, TName> {\r\n  const methods = useFormContext<TFieldValues>();\r\n  const { name, control = methods.control, shouldUnregister } = props;\r\n  const [value, setInputStateValue] = React.useState(\r\n    get(\r\n      control._formValues,\r\n      name,\r\n      get(control._defaultValues, name, props.defaultValue),\r\n    ),\r\n  );\r\n  set(control._formValues, name, value);\r\n  const formState = useFormState({\r\n    control: control || methods.control,\r\n    name,\r\n  });\r\n\r\n  const registerProps = control.register(name, {\r\n    ...props.rules,\r\n    value,\r\n  });\r\n\r\n  const updateMounted = React.useCallback(\r\n    (name: InternalFieldName, value: boolean) => {\r\n      const field: Field = get(control._fields, name);\r\n\r\n      if (field) {\r\n        field._f.mount = value;\r\n      }\r\n    },\r\n    [control],\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const controllerSubscription = control._subjects.control.subscribe({\r\n      next: (data) =>\r\n        (!data.name || name === data.name) &&\r\n        setInputStateValue(get(data.values, name)),\r\n    });\r\n    updateMounted(name, true);\r\n\r\n    return () => {\r\n      controllerSubscription.unsubscribe();\r\n      const _shouldUnregisterField =\r\n        control._shouldUnregister || shouldUnregister;\r\n\r\n      if (\r\n        isNameInFieldArray(control._names.array, name)\r\n          ? _shouldUnregisterField && !control._isInAction.val\r\n          : _shouldUnregisterField\r\n      ) {\r\n        control.unregister(name);\r\n      } else {\r\n        updateMounted(name, false);\r\n      }\r\n    };\r\n  }, [name, control, shouldUnregister, updateMounted]);\r\n\r\n  return {\r\n    field: {\r\n      onChange: (event: any) => {\r\n        const value = getControllerValue(event);\r\n        setInputStateValue(value);\r\n\r\n        registerProps.onChange({\r\n          target: {\r\n            value,\r\n            name: name as InternalFieldName,\r\n          },\r\n          type: EVENTS.CHANGE,\r\n        });\r\n      },\r\n      onBlur: () => {\r\n        registerProps.onBlur({\r\n          target: {\r\n            name: name as InternalFieldName,\r\n          },\r\n          type: EVENTS.BLUR,\r\n        });\r\n      },\r\n      name,\r\n      value,\r\n      ref: (elm) => {\r\n        const field = get(control._fields, name);\r\n\r\n        if (elm && field) {\r\n          field._f.ref = {\r\n            focus: () => elm.focus(),\r\n            setCustomValidity: (message: string) =>\r\n              elm.setCustomValidity(message),\r\n            reportValidity: () => elm.reportValidity(),\r\n          };\r\n        }\r\n      },\r\n    },\r\n    formState,\r\n    fieldState: {\r\n      invalid: !!get(formState.errors, name),\r\n      isDirty: !!get(formState.dirtyFields, name),\r\n      isTouched: !!get(formState.touchedFields, name),\r\n      error: get(formState.errors, name),\r\n    },\r\n  };\r\n}\r\n","import { ControllerProps, FieldPath, FieldValues } from './types';\r\nimport { useController } from './useController';\r\n\r\nconst Controller = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\r\n>(\r\n  props: ControllerProps<TFieldValues, TName>,\r\n) => props.render(useController<TFieldValues, TName>(props));\r\n\r\nexport { Controller };\r\n","import {\r\n  InternalFieldErrors,\r\n  InternalFieldName,\r\n  ValidateResult,\r\n} from '../types';\r\n\r\nexport default (\r\n  name: InternalFieldName,\r\n  validateAllFieldCriteria: boolean,\r\n  errors: InternalFieldErrors,\r\n  type: string,\r\n  message: ValidateResult,\r\n) =>\r\n  validateAllFieldCriteria\r\n    ? {\r\n        ...errors[name],\r\n        types: {\r\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\r\n          [type]: message || true,\r\n        },\r\n      }\r\n    : {};\r\n","import { FieldRefs, InternalFieldName } from '../types';\r\nimport { get } from '../utils';\r\nimport isObject from '../utils/isObject';\r\nimport isUndefined from '../utils/isUndefined';\r\nimport omit from '../utils/omit';\r\n\r\nconst focusFieldBy = (\r\n  fields: FieldRefs,\r\n  callback: (name: string) => boolean,\r\n  fieldsNames?: Set<InternalFieldName> | InternalFieldName[],\r\n) => {\r\n  for (const key of fieldsNames || Object.keys(fields)) {\r\n    const field = get(fields, key);\r\n\r\n    if (field) {\r\n      const _f = field._f;\r\n      const current = omit(field, '_f');\r\n\r\n      if (_f && callback(_f.name)) {\r\n        if (_f.ref.focus && isUndefined(_f.ref.focus())) {\r\n          break;\r\n        } else if (_f.refs) {\r\n          _f.refs[0].focus();\r\n          break;\r\n        }\r\n      } else if (isObject(current)) {\r\n        focusFieldBy(current, callback);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport default focusFieldBy;\r\n","import { FieldArrayMethodProps, InternalFieldName } from '../types';\r\n\r\nexport default (\r\n  name: InternalFieldName,\r\n  index: number,\r\n  options?: FieldArrayMethodProps,\r\n): string =>\r\n  options && !options.shouldFocus\r\n    ? options.focusName || `${name}.${options.focusIndex}.`\r\n    : `${name}.${index}.`;\r\n","import * as React from 'react';\r\n\r\nimport { FieldValues } from '../types';\r\n\r\nexport default <T, K>(\r\n  values: T[],\r\n  _fieldIds: React.MutableRefObject<K>,\r\n  keyName: string,\r\n) =>\r\n  values.map((value, index) => {\r\n    const output = _fieldIds.current[index as keyof K];\r\n\r\n    return {\r\n      ...value,\r\n      ...(output ? { [keyName]: (output as FieldValues)[keyName] } : {}),\r\n    };\r\n  });\r\n","export default () => {\r\n  const d =\r\n    typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\r\n\r\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\r\n    const r = (Math.random() * 16 + d) % 16 | 0;\r\n\r\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n  });\r\n};\r\n","import { FieldArrayPath, FieldArrayWithId, FieldValues } from '../types';\r\n\r\nimport generateId from './generateId';\r\n\r\nexport default <\r\n  TFieldArrayValues extends FieldValues = FieldValues,\r\n  TFieldName extends FieldArrayPath<TFieldArrayValues> = FieldArrayPath<TFieldArrayValues>,\r\n  TKeyName extends string = 'id',\r\n>(\r\n  values: Partial<TFieldArrayValues>[] = [],\r\n  keyName: TKeyName,\r\n): Partial<FieldArrayWithId<TFieldArrayValues, TFieldName, TKeyName>>[] =>\r\n  values.map((value: Partial<TFieldArrayValues>) => ({\r\n    ...(value[keyName] ? {} : { [keyName]: generateId() }),\r\n    ...value,\r\n  })) as Partial<FieldArrayWithId<TFieldArrayValues, TFieldName, TKeyName>>[];\r\n","import convertToArrayPayload from './convertToArrayPayload';\r\n\r\nexport default function append<T>(data: T[], value: T | T[]): T[] {\r\n  return [...convertToArrayPayload(data), ...convertToArrayPayload(value)];\r\n}\r\n","export default <T>(value: T | T[]): undefined[] | undefined =>\r\n  Array.isArray(value) ? value.map(() => undefined) : undefined;\r\n","import convertToArrayPayload from './convertToArrayPayload';\r\n\r\nexport default function insert<T>(data: T[], index: number): (T | undefined)[];\r\nexport default function insert<T>(\r\n  data: T[],\r\n  index: number,\r\n  value: T | T[],\r\n): T[];\r\nexport default function insert<T>(\r\n  data: T[],\r\n  index: number,\r\n  value?: T | T[],\r\n): (T | undefined)[] {\r\n  return [\r\n    ...data.slice(0, index),\r\n    ...convertToArrayPayload(value),\r\n    ...data.slice(index),\r\n  ];\r\n}\r\n","import isUndefined from './isUndefined';\r\n\r\nexport default <T>(\r\n  data: (T | undefined)[],\r\n  from: number,\r\n  to: number,\r\n): (T | undefined)[] => {\r\n  if (Array.isArray(data)) {\r\n    if (isUndefined(data[to])) {\r\n      data[to] = undefined;\r\n    }\r\n    data.splice(to, 0, data.splice(from, 1)[0]);\r\n    return data;\r\n  }\r\n\r\n  return [];\r\n};\r\n","import convertToArrayPayload from './convertToArrayPayload';\r\n\r\nexport default function prepend<T>(data: T[], value: T | T[]): T[] {\r\n  return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\r\n}\r\n","import compact from './compact';\r\nimport convertToArrayPayload from './convertToArrayPayload';\r\nimport isUndefined from './isUndefined';\r\n\r\nfunction removeAtIndexes<T>(data: T[], indexes: number[]): T[] {\r\n  let i = 0;\r\n  const temp = [...data];\r\n\r\n  for (const index of indexes) {\r\n    temp.splice(index - i, 1);\r\n    i++;\r\n  }\r\n\r\n  return compact(temp).length ? temp : [];\r\n}\r\n\r\nexport default <T>(data: T[], index?: number | number[]): T[] =>\r\n  isUndefined(index)\r\n    ? []\r\n    : removeAtIndexes(\r\n        data,\r\n        (convertToArrayPayload(index) as number[]).sort((a, b) => a - b),\r\n      );\r\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\r\n  data[indexA] = [data[indexB], (data[indexB] = data[indexA])][0];\r\n};\r\n","export default <T>(fieldValues: T[], index: number, value: any) => {\r\n  fieldValues[index] = value;\r\n  return fieldValues;\r\n};\r\n","import * as React from 'react';\r\n\r\nimport focusFieldBy from './logic/focusFieldBy';\r\nimport getFocusFieldName from './logic/getFocusFieldName';\r\nimport mapCurrentIds from './logic/mapCurrentIds';\r\nimport mapIds from './logic/mapId';\r\nimport appendAt from './utils/append';\r\nimport convertToArrayPayload from './utils/convertToArrayPayload';\r\nimport fillEmptyArray from './utils/fillEmptyArray';\r\nimport get from './utils/get';\r\nimport insertAt from './utils/insert';\r\nimport moveArrayAt from './utils/move';\r\nimport prependAt from './utils/prepend';\r\nimport removeArrayAt from './utils/remove';\r\nimport set from './utils/set';\r\nimport swapArrayAt from './utils/swap';\r\nimport updateAt from './utils/update';\r\nimport {\r\n  FieldArray,\r\n  FieldArrayMethodProps,\r\n  FieldArrayPath,\r\n  FieldArrayWithId,\r\n  FieldPath,\r\n  FieldValues,\r\n  UseFieldArrayProps,\r\n  UseFieldArrayReturn,\r\n} from './types';\r\nimport { useFormContext } from './useFormContext';\r\n\r\nexport const useFieldArray = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TFieldArrayName extends FieldArrayPath<TFieldValues> = FieldArrayPath<TFieldValues>,\r\n  TKeyName extends string = 'id',\r\n>(\r\n  props: UseFieldArrayProps<TFieldValues, TFieldArrayName, TKeyName>,\r\n): UseFieldArrayReturn<TFieldValues, TFieldArrayName, TKeyName> => {\r\n  const methods = useFormContext();\r\n  const {\r\n    control = methods.control,\r\n    name,\r\n    keyName = 'id' as TKeyName,\r\n    shouldUnregister,\r\n  } = props;\r\n  const [fields, setFields] = React.useState<\r\n    Partial<FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>>[]\r\n  >(mapIds(control._getFieldArrayValue(name), keyName));\r\n  const _fieldIds = React.useRef(fields);\r\n\r\n  _fieldIds.current = fields;\r\n  control._names.array.add(name);\r\n\r\n  const append = (\r\n    value:\r\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\r\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\r\n    options?: FieldArrayMethodProps,\r\n  ) => {\r\n    const appendValue = convertToArrayPayload(value);\r\n    const updatedFieldArrayValuesWithKey = appendAt(\r\n      mapCurrentIds(control._getFieldArrayValue(name), _fieldIds, keyName),\r\n      mapIds(convertToArrayPayload(value), keyName),\r\n    );\r\n    setFields(updatedFieldArrayValuesWithKey);\r\n    control._updateFieldArray(\r\n      keyName,\r\n      name,\r\n      appendAt,\r\n      {\r\n        argA: fillEmptyArray(value),\r\n      },\r\n      updatedFieldArrayValuesWithKey,\r\n    );\r\n\r\n    control._names.focus = getFocusFieldName(\r\n      name,\r\n      updatedFieldArrayValuesWithKey.length - appendValue.length,\r\n      options,\r\n    );\r\n  };\r\n\r\n  const prepend = (\r\n    value:\r\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\r\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\r\n    options?: FieldArrayMethodProps,\r\n  ) => {\r\n    const updatedFieldArrayValuesWithKey = prependAt(\r\n      mapCurrentIds(control._getFieldArrayValue(name), _fieldIds, keyName),\r\n      mapIds(convertToArrayPayload(value), keyName),\r\n    );\r\n    setFields(updatedFieldArrayValuesWithKey);\r\n    control._updateFieldArray(\r\n      keyName,\r\n      name,\r\n      prependAt,\r\n      {\r\n        argA: fillEmptyArray(value),\r\n      },\r\n      updatedFieldArrayValuesWithKey,\r\n    );\r\n\r\n    control._names.focus = getFocusFieldName(name, 0, options);\r\n  };\r\n\r\n  const remove = (index?: number | number[]) => {\r\n    const updatedFieldArrayValuesWithKey: Partial<\r\n      FieldArrayWithId<TFieldValues, TFieldArrayName, TKeyName>\r\n    >[] = removeArrayAt(\r\n      mapCurrentIds(control._getFieldArrayValue(name), _fieldIds, keyName),\r\n      index,\r\n    );\r\n    setFields(updatedFieldArrayValuesWithKey);\r\n    control._updateFieldArray(\r\n      keyName,\r\n      name,\r\n      removeArrayAt,\r\n      {\r\n        argA: index,\r\n      },\r\n      updatedFieldArrayValuesWithKey,\r\n    );\r\n  };\r\n\r\n  const insert = (\r\n    index: number,\r\n    value:\r\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>\r\n      | Partial<FieldArray<TFieldValues, TFieldArrayName>>[],\r\n    options?: FieldArrayMethodProps,\r\n  ) => {\r\n    const updatedFieldArrayValuesWithKey = insertAt(\r\n      mapCurrentIds(control._getFieldArrayValue(name), _fieldIds, keyName),\r\n      index,\r\n      mapIds(convertToArrayPayload(value), keyName),\r\n    );\r\n    setFields(updatedFieldArrayValuesWithKey);\r\n    control._updateFieldArray(\r\n      keyName,\r\n      name,\r\n      insertAt,\r\n      {\r\n        argA: index,\r\n        argB: fillEmptyArray(value),\r\n      },\r\n      updatedFieldArrayValuesWithKey,\r\n    );\r\n\r\n    control._names.focus = getFocusFieldName(name, index, options);\r\n  };\r\n\r\n  const swap = (indexA: number, indexB: number) => {\r\n    const updatedFieldArrayValuesWithKey = mapCurrentIds(\r\n      control._getFieldArrayValue(name),\r\n      _fieldIds,\r\n      keyName,\r\n    );\r\n    swapArrayAt(updatedFieldArrayValuesWithKey, indexA, indexB);\r\n    setFields(updatedFieldArrayValuesWithKey);\r\n    control._updateFieldArray(\r\n      keyName,\r\n      name,\r\n      swapArrayAt,\r\n      {\r\n        argA: indexA,\r\n        argB: indexB,\r\n      },\r\n      updatedFieldArrayValuesWithKey,\r\n      false,\r\n    );\r\n  };\r\n\r\n  const move = (from: number, to: number) => {\r\n    const updatedFieldArrayValuesWithKey = mapCurrentIds(\r\n      control._getFieldArrayValue(name),\r\n      _fieldIds,\r\n      keyName,\r\n    );\r\n    moveArrayAt(updatedFieldArrayValuesWithKey, from, to);\r\n    setFields(updatedFieldArrayValuesWithKey);\r\n    control._updateFieldArray(\r\n      keyName,\r\n      name,\r\n      moveArrayAt,\r\n      {\r\n        argA: from,\r\n        argB: to,\r\n      },\r\n      updatedFieldArrayValuesWithKey,\r\n      false,\r\n    );\r\n  };\r\n\r\n  const update = (\r\n    index: number,\r\n    value: Partial<FieldArray<TFieldValues, TFieldArrayName>>,\r\n  ) => {\r\n    const updatedFieldArrayValuesWithKey = mapCurrentIds(\r\n      control._getFieldArrayValue(name),\r\n      _fieldIds,\r\n      keyName,\r\n    );\r\n    const updatedFieldArrayValues = updateAt(\r\n      updatedFieldArrayValuesWithKey,\r\n      index,\r\n      value,\r\n    );\r\n    _fieldIds.current = mapIds(updatedFieldArrayValues, keyName);\r\n    setFields(_fieldIds.current);\r\n    control._updateFieldArray(\r\n      keyName,\r\n      name,\r\n      updateAt,\r\n      {\r\n        argA: index,\r\n        argB: value,\r\n      },\r\n      updatedFieldArrayValuesWithKey,\r\n      true,\r\n      false,\r\n    );\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    control._isInAction.val = false;\r\n\r\n    if (control._names.watchAll) {\r\n      control._subjects.state.next({});\r\n    } else {\r\n      for (const watchField of control._names.watch) {\r\n        if (name.startsWith(watchField)) {\r\n          control._subjects.state.next({});\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    control._subjects.watch.next({\r\n      name,\r\n      values: control._formValues,\r\n    });\r\n\r\n    control._names.focus &&\r\n      focusFieldBy(control._fields, (key: string) =>\r\n        key.startsWith(control._names.focus),\r\n      );\r\n\r\n    control._names.focus = '';\r\n\r\n    control._proxyFormState.isValid && control._updateValid();\r\n  }, [fields, name, control, keyName]);\r\n\r\n  React.useEffect(() => {\r\n    const fieldArraySubscription = control._subjects.array.subscribe({\r\n      next({ values, name: fieldArrayName }) {\r\n        if (fieldArrayName === name || !fieldArrayName) {\r\n          setFields(mapIds(get(values, name), keyName));\r\n        }\r\n      },\r\n    });\r\n\r\n    !get(control._formValues, name) && set(control._formValues, name, []);\r\n\r\n    return () => {\r\n      fieldArraySubscription.unsubscribe();\r\n      if (control._shouldUnregister || shouldUnregister) {\r\n        control.unregister(name as FieldPath<TFieldValues>);\r\n      }\r\n    };\r\n  }, [name, control, keyName, shouldUnregister]);\r\n\r\n  return {\r\n    swap: React.useCallback(swap, [name, control, keyName]),\r\n    move: React.useCallback(move, [name, control, keyName]),\r\n    prepend: React.useCallback(prepend, [name, control, keyName]),\r\n    append: React.useCallback(append, [name, control, keyName]),\r\n    remove: React.useCallback(remove, [name, control, keyName]),\r\n    insert: React.useCallback(insert, [name, control, keyName]),\r\n    update: React.useCallback(update, [name, control, keyName]),\r\n    fields: fields as FieldArrayWithId<\r\n      TFieldValues,\r\n      TFieldArrayName,\r\n      TKeyName\r\n    >[],\r\n  };\r\n};\r\n","import isObject from './isObject';\r\n\r\nexport default function cloneObject<T extends unknown>(data: T): T {\r\n  let copy: any;\r\n  const isArray = Array.isArray(data);\r\n\r\n  if (data instanceof Date) {\r\n    copy = new Date(data.getTime());\r\n  } else if (isArray || isObject(data)) {\r\n    copy = isArray ? [] : {};\r\n    for (const key in data) {\r\n      copy[key] = cloneObject(data[key]);\r\n    }\r\n  } else {\r\n    return data;\r\n  }\r\n\r\n  return copy;\r\n}\r\n","import { Primitive } from '../types';\r\n\r\nimport isNullOrUndefined from './isNullOrUndefined';\r\nimport { isObjectType } from './isObject';\r\n\r\nexport default (value: unknown): value is Primitive =>\r\n  isNullOrUndefined(value) || !isObjectType(value);\r\n","import isObject from '../utils/isObject';\r\n\r\nimport isDateObject from './isDateObject';\r\nimport isPrimitive from './isPrimitive';\r\n\r\nexport default function deepEqual(object1: any, object2: any) {\r\n  if (\r\n    isPrimitive(object1) ||\r\n    isPrimitive(object2) ||\r\n    isDateObject(object1) ||\r\n    isDateObject(object2)\r\n  ) {\r\n    return object1 === object2;\r\n  }\r\n\r\n  const keys1 = Object.keys(object1);\r\n  const keys2 = Object.keys(object2);\r\n\r\n  if (keys1.length !== keys2.length) {\r\n    return false;\r\n  }\r\n\r\n  for (const key of keys1) {\r\n    const val1 = object1[key];\r\n\r\n    if (!keys2.includes(key)) {\r\n      return false;\r\n    }\r\n\r\n    if (key !== 'ref') {\r\n      const val2 = object2[key];\r\n\r\n      if (\r\n        (isObject(val1) || Array.isArray(val1)) &&\r\n        (isObject(val2) || Array.isArray(val2))\r\n          ? !deepEqual(val1, val2)\r\n          : val1 !== val2\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n","import { VALIDATION_MODE } from '../constants';\r\nimport { Mode } from '../types';\r\n\r\nexport default (\r\n  mode?: Mode,\r\n): {\r\n  isOnSubmit: boolean;\r\n  isOnBlur: boolean;\r\n  isOnChange: boolean;\r\n  isOnAll: boolean;\r\n  isOnTouch: boolean;\r\n} => ({\r\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\r\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\r\n  isOnChange: mode === VALIDATION_MODE.onChange,\r\n  isOnAll: mode === VALIDATION_MODE.all,\r\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\r\n});\r\n","import { FieldElement } from '../types';\r\n\r\nexport default (element: FieldElement): element is HTMLInputElement =>\r\n  element.type === 'file';\r\n","export default (value: unknown): value is Function =>\r\n  typeof value === 'function';\r\n","export default (value: any): value is HTMLElement =>\r\n  value instanceof HTMLElement;\r\n","import { FieldElement } from '../types';\r\n\r\nexport default (element: FieldElement): element is HTMLSelectElement =>\r\n  element.type === `select-multiple`;\r\n","import { FieldElement } from '../types';\r\n\r\nexport default (element: FieldElement): element is HTMLInputElement =>\r\n  element.type === 'radio';\r\n","import { FieldElement } from '../types';\r\n\r\nimport isCheckBoxInput from './isCheckBoxInput';\r\nimport isRadioInput from './isRadioInput';\r\n\r\nexport default (ref: FieldElement): ref is HTMLInputElement =>\r\n  isRadioInput(ref) || isCheckBoxInput(ref);\r\n","export default (value: unknown): value is string => typeof value === 'string';\r\n","export default typeof window !== 'undefined' &&\r\n  typeof window.HTMLElement !== 'undefined' &&\r\n  typeof document !== 'undefined';\r\n","import { Ref } from '../types';\r\n\r\nimport isHTMLElement from './isHTMLElement';\r\n\r\nexport default (ref: Ref) => !isHTMLElement(ref) || !document.contains(ref);\r\n","import { FieldArrayWithId } from '../types';\r\n\r\nimport omit from './omit';\r\n\r\nexport default <T extends Partial<FieldArrayWithId>[]>(\r\n  fields: T,\r\n  keyName: string,\r\n) => fields.map((field = {}) => omit(field, keyName));\r\n","export type Observer<T> = {\r\n  next: (value: T) => void;\r\n};\r\n\r\ntype TearDown = () => void;\r\n\r\nexport type SubjectType<T> = {\r\n  next: (value: T) => void;\r\n  subscribe: (value: Observer<T>) => {\r\n    unsubscribe: TearDown;\r\n  };\r\n};\r\n\r\nexport class Subscription {\r\n  private tearDowns: TearDown[] = [];\r\n\r\n  add(tearDown: TearDown) {\r\n    this.tearDowns.push(tearDown);\r\n  }\r\n\r\n  unsubscribe() {\r\n    for (const teardown of this.tearDowns) {\r\n      teardown();\r\n    }\r\n    this.tearDowns = [];\r\n  }\r\n}\r\n\r\nclass Subscriber<T> implements Observer<T> {\r\n  closed = false;\r\n\r\n  constructor(private observer: Observer<T>, subscription: Subscription) {\r\n    subscription.add(() => (this.closed = true));\r\n  }\r\n\r\n  next(value: T) {\r\n    if (!this.closed) {\r\n      this.observer.next(value);\r\n    }\r\n  }\r\n}\r\n\r\nexport default class Subject<T> {\r\n  observers: Observer<T>[];\r\n\r\n  constructor() {\r\n    this.observers = [];\r\n  }\r\n\r\n  next(value: T) {\r\n    for (const observer of this.observers) {\r\n      observer.next(value);\r\n    }\r\n  }\r\n\r\n  subscribe(observer: Observer<T>) {\r\n    const subscription = new Subscription();\r\n    const subscriber = new Subscriber(observer, subscription);\r\n    this.observers.push(subscriber);\r\n\r\n    return subscription;\r\n  }\r\n\r\n  unsubscribe() {\r\n    this.observers = [];\r\n  }\r\n}\r\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\r\n","import isBoolean from './isBoolean';\r\nimport isEmptyObject from './isEmptyObject';\r\nimport isKey from './isKey';\r\nimport isObject from './isObject';\r\nimport isUndefined from './isUndefined';\r\nimport stringToPath from './stringToPath';\r\n\r\nfunction baseGet(object: any, updatePath: (string | number)[]) {\r\n  const length = updatePath.slice(0, -1).length;\r\n  let index = 0;\r\n\r\n  while (index < length) {\r\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\r\n  }\r\n\r\n  return object;\r\n}\r\n\r\nexport default function unset(object: any, path: string) {\r\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\r\n  const childObject =\r\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\r\n  const key = updatePath[updatePath.length - 1];\r\n  let previousObjRef;\r\n\r\n  if (childObject) {\r\n    delete childObject[key];\r\n  }\r\n\r\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\r\n    let index = -1;\r\n    let objectRef;\r\n    const currentPaths = updatePath.slice(0, -(k + 1));\r\n    const currentPathsLength = currentPaths.length - 1;\r\n\r\n    if (k > 0) {\r\n      previousObjRef = object;\r\n    }\r\n\r\n    while (++index < currentPaths.length) {\r\n      const item = currentPaths[index];\r\n      objectRef = objectRef ? objectRef[item] : object[item];\r\n\r\n      if (\r\n        currentPathsLength === index &&\r\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\r\n          (Array.isArray(objectRef) &&\r\n            !objectRef.filter(\r\n              (data) =>\r\n                (isObject(data) && !isEmptyObject(data)) || isBoolean(data),\r\n            ).length))\r\n      ) {\r\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\r\n      }\r\n\r\n      previousObjRef = objectRef;\r\n    }\r\n  }\r\n\r\n  return object;\r\n}\r\n","import isUndefined from '../utils/isUndefined';\r\n\r\ntype CheckboxFieldResult = {\r\n  isValid: boolean;\r\n  value: string | string[] | boolean | undefined;\r\n};\r\n\r\nconst defaultResult: CheckboxFieldResult = {\r\n  value: false,\r\n  isValid: false,\r\n};\r\n\r\nconst validResult = { value: true, isValid: true };\r\n\r\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\r\n  if (Array.isArray(options)) {\r\n    if (options.length > 1) {\r\n      const values = options\r\n        .filter((option) => option && option.checked && !option.disabled)\r\n        .map((option) => option.value);\r\n      return { value: values, isValid: !!values.length };\r\n    }\r\n\r\n    return options[0].checked && !options[0].disabled\r\n      ? // @ts-expect-error expected to work in the browser\r\n        options[0].attributes && !isUndefined(options[0].attributes.value)\r\n        ? isUndefined(options[0].value) || options[0].value === ''\r\n          ? validResult\r\n          : { value: options[0].value, isValid: true }\r\n        : validResult\r\n      : defaultResult;\r\n  }\r\n\r\n  return defaultResult;\r\n};\r\n","import { Field } from '../types';\r\nimport isUndefined from '../utils/isUndefined';\r\n\r\nexport default (\r\n  value: any,\r\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\r\n) =>\r\n  isUndefined(value)\r\n    ? value\r\n    : valueAsNumber\r\n    ? value === ''\r\n      ? NaN\r\n      : +value\r\n    : valueAsDate\r\n    ? new Date(value)\r\n    : setValueAs\r\n    ? setValueAs(value)\r\n    : value;\r\n","export default (\r\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\r\n): string[] =>\r\n  [...options]\r\n    .filter(({ selected }): boolean => selected)\r\n    .map(({ value }): string => value);\r\n","type RadioFieldResult = {\r\n  isValid: boolean;\r\n  value: number | string | null;\r\n};\r\n\r\nconst defaultReturn: RadioFieldResult = {\r\n  isValid: false,\r\n  value: null,\r\n};\r\n\r\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\r\n  Array.isArray(options)\r\n    ? options.reduce(\r\n        (previous, option): RadioFieldResult =>\r\n          option && option.checked && !option.disabled\r\n            ? {\r\n                isValid: true,\r\n                value: option.value,\r\n              }\r\n            : previous,\r\n        defaultReturn,\r\n      )\r\n    : defaultReturn;\r\n","import { Field } from '../types';\r\nimport isCheckBox from '../utils/isCheckBoxInput';\r\nimport isFileInput from '../utils/isFileInput';\r\nimport isMultipleSelect from '../utils/isMultipleSelect';\r\nimport isRadioInput from '../utils/isRadioInput';\r\nimport isUndefined from '../utils/isUndefined';\r\n\r\nimport getCheckboxValue from './getCheckboxValue';\r\nimport getFieldValueAs from './getFieldValueAs';\r\nimport getMultipleSelectValue from './getMultipleSelectValue';\r\nimport getRadioValue from './getRadioValue';\r\n\r\nexport default function getFieldValue(field?: Field) {\r\n  if (field && field._f) {\r\n    const ref = field._f.ref;\r\n\r\n    if (\r\n      field._f.refs ? field._f.refs.every((ref) => ref.disabled) : ref.disabled\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (isFileInput(ref)) {\r\n      return ref.files;\r\n    }\r\n\r\n    if (isRadioInput(ref)) {\r\n      return getRadioValue(field._f.refs).value;\r\n    }\r\n\r\n    if (isMultipleSelect(ref)) {\r\n      return getMultipleSelectValue(ref.options);\r\n    }\r\n\r\n    if (isCheckBox(ref)) {\r\n      return getCheckboxValue(field._f.refs).value;\r\n    }\r\n\r\n    return getFieldValueAs(\r\n      isUndefined(ref.value) ? field._f.ref.value : ref.value,\r\n      field._f,\r\n    );\r\n  }\r\n}\r\n","import {\r\n  CriteriaMode,\r\n  Field,\r\n  FieldName,\r\n  FieldRefs,\r\n  InternalFieldName,\r\n} from '../types';\r\nimport { get } from '../utils';\r\nimport set from '../utils/set';\r\n\r\nexport default <TFieldValues>(\r\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\r\n  _fieldss: FieldRefs,\r\n  criteriaMode?: CriteriaMode,\r\n  shouldUseNativeValidation?: boolean | undefined,\r\n) => {\r\n  const fields: Record<InternalFieldName, Field['_f']> = {};\r\n\r\n  for (const name of fieldsNames) {\r\n    const field = get(_fieldss, name) as Field;\r\n\r\n    field && set(fields, name, field._f);\r\n  }\r\n\r\n  return {\r\n    criteriaMode,\r\n    names: [...fieldsNames] as FieldName<TFieldValues>[],\r\n    fields,\r\n    shouldUseNativeValidation,\r\n  };\r\n};\r\n","import { RegisterOptions } from '../types';\r\n\r\nexport default <T extends RegisterOptions>(options?: T, mounted?: boolean) =>\r\n  mounted &&\r\n  options &&\r\n  (options.required ||\r\n    options.min ||\r\n    options.max ||\r\n    options.maxLength ||\r\n    options.minLength ||\r\n    options.maxDate ||\r\n    options.minDate ||\r\n    options.pattern ||\r\n    options.validate);\r\n","import isObject from './isObject';\r\nimport isPrimitive from './isPrimitive';\r\n\r\nexport function deepMerge<\r\n  T extends Record<keyof T, any>,\r\n  U extends Record<keyof U, any>,\r\n>(target: T, source: U): T & U {\r\n  if (isPrimitive(target) || isPrimitive(source)) {\r\n    return source;\r\n  }\r\n\r\n  for (const key in source) {\r\n    const targetValue = target[key];\r\n    const sourceValue = source[key];\r\n\r\n    try {\r\n      target[key] =\r\n        (isObject(targetValue) && isObject(sourceValue)) ||\r\n        (Array.isArray(targetValue) && Array.isArray(sourceValue))\r\n          ? deepMerge(targetValue, sourceValue)\r\n          : sourceValue;\r\n    } catch {}\r\n  }\r\n\r\n  return target;\r\n}\r\n","import { get } from '../utils';\r\nimport deepEqual from '../utils/deepEqual';\r\nimport { deepMerge } from '../utils/deepMerge';\r\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\r\nimport set from '../utils/set';\r\n\r\nfunction setDirtyFields<\r\n  T extends Record<string, unknown>[],\r\n  U extends Record<string, unknown>[],\r\n  K extends Record<string, boolean | []>,\r\n>(\r\n  values: T,\r\n  defaultValues: U,\r\n  dirtyFields: Record<string, boolean | []>[],\r\n  parentNode?: K,\r\n  parentName?: keyof K,\r\n) {\r\n  let index = -1;\r\n\r\n  while (++index < values.length) {\r\n    for (const key in values[index]) {\r\n      if (Array.isArray(values[index][key])) {\r\n        !dirtyFields[index] && (dirtyFields[index] = {});\r\n        dirtyFields[index][key] = [];\r\n        setDirtyFields(\r\n          values[index][key] as T,\r\n          get(defaultValues[index] || {}, key, []),\r\n          dirtyFields[index][key] as [],\r\n          dirtyFields[index],\r\n          key,\r\n        );\r\n      } else {\r\n        !isNullOrUndefined(defaultValues) &&\r\n        deepEqual(get(defaultValues[index] || {}, key), values[index][key])\r\n          ? set(dirtyFields[index] || {}, key)\r\n          : (dirtyFields[index] = {\r\n              ...dirtyFields[index],\r\n              [key]: true,\r\n            });\r\n      }\r\n    }\r\n\r\n    parentNode &&\r\n      !dirtyFields.length &&\r\n      delete parentNode[parentName as keyof K];\r\n  }\r\n\r\n  return dirtyFields;\r\n}\r\n\r\nexport default <T extends U, U extends Record<string, unknown>[]>(\r\n  values: T,\r\n  defaultValues: U,\r\n  dirtyFields: Record<string, boolean | []>[],\r\n) =>\r\n  deepMerge(\r\n    setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)),\r\n    setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)),\r\n  );\r\n","export default ({\r\n  isOnBlur,\r\n  isOnChange,\r\n  isOnTouch,\r\n  isTouched,\r\n  isReValidateOnBlur,\r\n  isReValidateOnChange,\r\n  isBlurEvent,\r\n  isSubmitted,\r\n  isOnAll,\r\n}: {\r\n  isOnAll?: boolean;\r\n  isOnBlur?: boolean;\r\n  isOnChange?: boolean;\r\n  isReValidateOnBlur?: boolean;\r\n  isReValidateOnChange?: boolean;\r\n  isBlurEvent?: boolean;\r\n  isSubmitted?: boolean;\r\n  isOnTouch?: boolean;\r\n  isTouched?: boolean;\r\n}) => {\r\n  if (isOnAll) {\r\n    return false;\r\n  } else if (!isSubmitted && isOnTouch) {\r\n    return !(isTouched || isBlurEvent);\r\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\r\n    return !isBlurEvent;\r\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\r\n    return isBlurEvent;\r\n  }\r\n  return true;\r\n};\r\n","import compact from '../utils/compact';\r\nimport get from '../utils/get';\r\nimport unset from '../utils/unset';\r\n\r\nexport default <T>(ref: T, name: string) =>\r\n  !compact(get(ref, name, [])).length && unset(ref, name);\r\n","import * as React from 'react';\r\n\r\nimport { Message } from '../types';\r\nimport isString from '../utils/isString';\r\n\r\nexport default (value: unknown): value is Message =>\r\n  isString(value) || React.isValidElement(value as JSX.Element);\r\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\r\n","import { FieldError, Ref, ValidateResult } from '../types';\r\nimport isBoolean from '../utils/isBoolean';\r\nimport isMessage from '../utils/isMessage';\r\n\r\nexport default function getValidateError(\r\n  result: ValidateResult,\r\n  ref: Ref,\r\n  type = 'validate',\r\n): FieldError | void {\r\n  if (\r\n    isMessage(result) ||\r\n    (Array.isArray(result) && result.every(isMessage)) ||\r\n    (isBoolean(result) && !result)\r\n  ) {\r\n    return {\r\n      type,\r\n      message: isMessage(result) ? result : '',\r\n      ref,\r\n    };\r\n  }\r\n}\r\n","import { ValidationRule } from '../types';\r\nimport isObject from '../utils/isObject';\r\nimport isRegex from '../utils/isRegex';\r\n\r\nexport default (validationData?: ValidationRule) =>\r\n  isObject(validationData) && !isRegex(validationData)\r\n    ? validationData\r\n    : {\r\n        value: validationData,\r\n        message: '',\r\n      };\r\n","import { INPUT_VALIDATION_RULES } from '../constants';\r\nimport { Field, FieldError, InternalFieldErrors, Message } from '../types';\r\nimport isBoolean from '../utils/isBoolean';\r\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\r\nimport isDateObject from '../utils/isDateObject';\r\nimport isEmptyObject from '../utils/isEmptyObject';\r\nimport isFileInput from '../utils/isFileInput';\r\nimport isFunction from '../utils/isFunction';\r\nimport isMessage from '../utils/isMessage';\r\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\r\nimport isObject from '../utils/isObject';\r\nimport isRadioInput from '../utils/isRadioInput';\r\nimport isRegex from '../utils/isRegex';\r\nimport isString from '../utils/isString';\r\n\r\nimport appendErrors from './appendErrors';\r\nimport getCheckboxValue from './getCheckboxValue';\r\nimport getRadioValue from './getRadioValue';\r\nimport getValidateError from './getValidateError';\r\nimport getValueAndMessage from './getValueAndMessage';\r\n\r\nexport default async (\r\n  field: Field,\r\n  inputValue: any,\r\n  validateAllFieldCriteria: boolean,\r\n  shouldUseNativeValidation?: boolean,\r\n): Promise<InternalFieldErrors> => {\r\n  const {\r\n    ref,\r\n    refs,\r\n    required,\r\n    maxLength,\r\n    minLength,\r\n    maxDate,\r\n    minDate,\r\n    min,\r\n    max,\r\n    pattern,\r\n    validate,\r\n    name,\r\n    valueAsNumber,\r\n    mount,\r\n    disabled,\r\n  } = field._f;\r\n  if (!mount || disabled) {\r\n    return {};\r\n  }\r\n  const inputRef: HTMLInputElement = refs ? refs[0] : (ref as HTMLInputElement);\r\n  const setCustomValidty = (message?: string | boolean) => {\r\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\r\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || ' ');\r\n      inputRef.reportValidity();\r\n    }\r\n  };\r\n  const error: InternalFieldErrors = {};\r\n  const isRadio = isRadioInput(ref);\r\n  const isCheckBox = isCheckBoxInput(ref);\r\n  const isRadioOrCheckbox = isRadio || isCheckBox;\r\n  const isEmpty =\r\n    ((valueAsNumber || isFileInput(ref)) && !ref.value) ||\r\n    inputValue === '' ||\r\n    (Array.isArray(inputValue) && !inputValue.length);\r\n  const appendErrorsCurry = appendErrors.bind(\r\n    null,\r\n    name,\r\n    validateAllFieldCriteria,\r\n    error,\r\n  );\r\n  const getMinMaxMessage = (\r\n    exceedMax: boolean,\r\n    maxLengthMessage: Message,\r\n    minLengthMessage: Message,\r\n    maxType = INPUT_VALIDATION_RULES.maxLength,\r\n    minType = INPUT_VALIDATION_RULES.minLength,\r\n  ) => {\r\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\r\n    error[name] = {\r\n      type: exceedMax ? maxType : minType,\r\n      message,\r\n      ref,\r\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message),\r\n    };\r\n  };\r\n\r\n  if (\r\n    required &&\r\n    ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\r\n      (isBoolean(inputValue) && !inputValue) ||\r\n      (isCheckBox && !getCheckboxValue(refs).isValid) ||\r\n      (isRadio && !getRadioValue(refs).isValid))\r\n  ) {\r\n    const { value, message } = isMessage(required)\r\n      ? { value: !!required, message: required }\r\n      : getValueAndMessage(required);\r\n\r\n    if (value) {\r\n      error[name] = {\r\n        type: INPUT_VALIDATION_RULES.required,\r\n        message,\r\n        ref: inputRef,\r\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\r\n      };\r\n      if (!validateAllFieldCriteria) {\r\n        setCustomValidty(message);\r\n        return error;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\r\n    let exceedMax;\r\n    let exceedMin;\r\n    const maxOutput = getValueAndMessage(max);\r\n    const minOutput = getValueAndMessage(min);\r\n\r\n    if (!isNaN(inputValue)) {\r\n      const valueNumber =\r\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(inputValue);\r\n      if (!isNullOrUndefined(maxOutput.value)) {\r\n        exceedMax = valueNumber > maxOutput.value;\r\n      }\r\n      if (!isNullOrUndefined(minOutput.value)) {\r\n        exceedMin = valueNumber < minOutput.value;\r\n      }\r\n    } else {\r\n      const valueDate =\r\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue);\r\n      if (isString(maxOutput.value)) {\r\n        exceedMax = valueDate > new Date(maxOutput.value);\r\n      }\r\n      if (isString(minOutput.value)) {\r\n        exceedMin = valueDate < new Date(minOutput.value);\r\n      }\r\n    }\r\n\r\n    if (exceedMax || exceedMin) {\r\n      getMinMaxMessage(\r\n        !!exceedMax,\r\n        maxOutput.message,\r\n        minOutput.message,\r\n        INPUT_VALIDATION_RULES.max,\r\n        INPUT_VALIDATION_RULES.min,\r\n      );\r\n      if (!validateAllFieldCriteria) {\r\n        setCustomValidty(error[name]!.message);\r\n        return error;\r\n      }\r\n    }\r\n  }\r\n\r\n  if ((maxLength || minLength) && !isEmpty && isString(inputValue)) {\r\n    const maxLengthOutput = getValueAndMessage(maxLength);\r\n    const minLengthOutput = getValueAndMessage(minLength);\r\n    const exceedMax =\r\n      !isNullOrUndefined(maxLengthOutput.value) &&\r\n      inputValue.length > maxLengthOutput.value;\r\n    const exceedMin =\r\n      !isNullOrUndefined(minLengthOutput.value) &&\r\n      inputValue.length < minLengthOutput.value;\r\n\r\n    if (exceedMax || exceedMin) {\r\n      getMinMaxMessage(\r\n        exceedMax,\r\n        maxLengthOutput.message,\r\n        minLengthOutput.message,\r\n      );\r\n      if (!validateAllFieldCriteria) {\r\n        setCustomValidty(error[name]!.message);\r\n        return error;\r\n      }\r\n    }\r\n  }\r\n  \r\n  if ((maxDate || minDate) && !isEmpty && isDateObject(inputValue)) {\r\n    const { value: maxDateOutput, message: maxDateMessage } = getValueAndMessage(maxDate);\r\n    const { value: minDateOutput, message: minDateMessage } = getValueAndMessage(minDate);\r\n    const isAboveMaxDate = maxDateOutput && inputValue.getTime() >= (maxDateOutput as any).getTime()\r\n    const isBelowMinDate = minDateOutput && inputValue.getTime() <= (minDateOutput as any).getTime()\r\n    if (isAboveMaxDate) {\r\n        error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.maxDate, message: maxDateMessage,\r\n            ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.maxDate, maxDateMessage));\r\n        if (!validateAllFieldCriteria) {\r\n            setCustomValidty(maxDateMessage);\r\n        }\r\n    }\r\n    if (isBelowMinDate) {\r\n        error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.minDate, message: minDateMessage,\r\n            ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.minDate, minDateMessage));\r\n        if (!validateAllFieldCriteria) {\r\n            setCustomValidty(minDateMessage);\r\n        }\r\n    }\r\n    return error;\r\n  }\r\n\r\n  if (pattern && !isEmpty && isString(inputValue)) {\r\n    const { value: patternValue, message } = getValueAndMessage(pattern);\r\n\r\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\r\n      error[name] = {\r\n        type: INPUT_VALIDATION_RULES.pattern,\r\n        message,\r\n        ref,\r\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\r\n      };\r\n      if (!validateAllFieldCriteria) {\r\n        setCustomValidty(message);\r\n        return error;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (validate) {\r\n    if (isFunction(validate)) {\r\n      const result = await validate(inputValue);\r\n      const validateError = getValidateError(result, inputRef);\r\n\r\n      if (validateError) {\r\n        error[name] = {\r\n          ...validateError,\r\n          ...appendErrorsCurry(\r\n            INPUT_VALIDATION_RULES.validate,\r\n            validateError.message,\r\n          ),\r\n        };\r\n        if (!validateAllFieldCriteria) {\r\n          setCustomValidty(validateError.message);\r\n          return error;\r\n        }\r\n      }\r\n    } else if (isObject(validate)) {\r\n      let validationResult = {} as FieldError;\r\n\r\n      for (const key in validate) {\r\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\r\n          break;\r\n        }\r\n\r\n        const validateError = getValidateError(\r\n          await validate[key](inputValue),\r\n          inputRef,\r\n          key,\r\n        );\r\n\r\n        if (validateError) {\r\n          validationResult = {\r\n            ...validateError,\r\n            ...appendErrorsCurry(key, validateError.message),\r\n          };\r\n\r\n          setCustomValidty(validateError.message);\r\n\r\n          if (validateAllFieldCriteria) {\r\n            error[name] = validationResult;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!isEmptyObject(validationResult)) {\r\n        error[name] = {\r\n          ref: inputRef,\r\n          ...validationResult,\r\n        };\r\n        if (!validateAllFieldCriteria) {\r\n          return error;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setCustomValidty(true);\r\n  return error;\r\n};\r\n","import { EVENTS, VALIDATION_MODE } from '../constants';\r\nimport {\r\n  BatchFieldArrayUpdate,\r\n  ChangeHandler,\r\n  DeepPartial,\r\n  DelayCallback,\r\n  Field,\r\n  FieldError,\r\n  FieldNamesMarkedBoolean,\r\n  FieldPath,\r\n  FieldRefs,\r\n  FieldValues,\r\n  FormState,\r\n  GetIsDirty,\r\n  InternalFieldName,\r\n  Names,\r\n  Path,\r\n  PathValue,\r\n  Ref,\r\n  RegisterOptions,\r\n  ResolverResult,\r\n  SetFieldValue,\r\n  SetValueConfig,\r\n  Subjects,\r\n  UnpackNestedValue,\r\n  UpdateValues,\r\n  UseFormClearErrors,\r\n  UseFormGetValues,\r\n  UseFormHandleSubmit,\r\n  UseFormProps,\r\n  UseFormRegister,\r\n  UseFormRegisterReturn,\r\n  UseFormReset,\r\n  UseFormReturn,\r\n  UseFormSetError,\r\n  UseFormSetFocus,\r\n  UseFormSetValue,\r\n  UseFormTrigger,\r\n  UseFormUnregister,\r\n  UseFormWatch,\r\n  WatchInternal,\r\n  WatchObserver,\r\n} from '../types';\r\nimport { set } from '../utils';\r\nimport cloneObject from '../utils/cloneObject';\r\nimport compact from '../utils/compact';\r\nimport convertToArrayPayload from '../utils/convertToArrayPayload';\r\nimport deepEqual from '../utils/deepEqual';\r\nimport get from '../utils/get';\r\nimport getValidationModes from '../utils/getValidationModes';\r\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\r\nimport isDateObject from '../utils/isDateObject';\r\nimport isEmptyObject from '../utils/isEmptyObject';\r\nimport isFileInput from '../utils/isFileInput';\r\nimport isFunction from '../utils/isFunction';\r\nimport isHTMLElement from '../utils/isHTMLElement';\r\nimport isMultipleSelect from '../utils/isMultipleSelect';\r\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\r\nimport isObject from '../utils/isObject';\r\nimport isPrimitive from '../utils/isPrimitive';\r\nimport isRadioOrCheckboxFunction from '../utils/isRadioOrCheckbox';\r\nimport isString from '../utils/isString';\r\nimport isUndefined from '../utils/isUndefined';\r\nimport isWeb from '../utils/isWeb';\r\nimport live from '../utils/live';\r\nimport omit from '../utils/omit';\r\nimport omitKey from '../utils/omitKeys';\r\nimport omitKeys from '../utils/omitKeys';\r\nimport Subject from '../utils/Subject';\r\nimport unset from '../utils/unset';\r\n\r\nimport focusFieldBy from './focusFieldBy';\r\nimport getFieldValue from './getFieldValue';\r\nimport getFieldValueAs from './getFieldValueAs';\r\nimport getNodeParentName from './getNodeParentName';\r\nimport getResolverOptions from './getResolverOptions';\r\nimport hasValidation from './hasValidation';\r\nimport isNameInFieldArray from './isNameInFieldArray';\r\nimport setFieldArrayDirtyFields from './setFieldArrayDirtyFields';\r\nimport skipValidation from './skipValidation';\r\nimport unsetEmptyArray from './unsetEmptyArray';\r\nimport validateField from './validateField';\r\n\r\nconst defaultOptions = {\r\n  mode: VALIDATION_MODE.all,\r\n  reValidateMode: VALIDATION_MODE.onChange,\r\n  shouldFocusError: true,\r\n  shouldUnregister: true,\r\n} as const;\r\n\r\nconst isWindowUndefined = typeof window === 'undefined';\r\n\r\nexport function createFormControl<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TContext extends object = object,\r\n>(\r\n  props: UseFormProps<TFieldValues, TContext> = {},\r\n): Omit<UseFormReturn<TFieldValues, TContext>, 'formState'> {\r\n  let formOptions = {\r\n    ...defaultOptions,\r\n    ...props,\r\n  };\r\n  let _delayCallback: DelayCallback;\r\n  let _formState = {\r\n    isDirty: false,\r\n    isValidating: false,\r\n    dirtyFields: {},\r\n    isSubmitted: false,\r\n    submitCount: 0,\r\n    resetCount: 0,\r\n    touchedFields: {},\r\n    isSubmitting: false,\r\n    isSubmitSuccessful: false,\r\n    isValid: false,\r\n    errors: {},\r\n  };\r\n  let _fields = {};\r\n  let _formValues = {};\r\n  let _defaultValues = formOptions.defaultValues || {};\r\n  let _isInAction = false;\r\n  let _isMounted = false;\r\n  let _timer = 0;\r\n  let _names: Names = {\r\n    mount: new Set(),\r\n    unMount: new Set(),\r\n    array: new Set(),\r\n    watch: new Set(),\r\n  } as Names;\r\n  let _validateCount: Record<InternalFieldName, number> = {};\r\n  const _proxyFormState = {\r\n    isDirty: false,\r\n    dirtyFields: false,\r\n    touchedFields: false,\r\n    isValidating: false,\r\n    isValid: false,\r\n    errors: false,\r\n  };\r\n  const _subjects: Subjects<TFieldValues> = {\r\n    watch: new Subject(),\r\n    control: new Subject(),\r\n    array: new Subject(),\r\n    state: new Subject(),\r\n  };\r\n\r\n  const validationMode = getValidationModes(formOptions.mode);\r\n  const isValidateAllFieldCriteria =\r\n    formOptions.criteriaMode === VALIDATION_MODE.all;\r\n\r\n  const debounce =\r\n    <T extends Function>(callback: T, wait: number) =>\r\n    (...args: any) => {\r\n      clearTimeout(_timer);\r\n      _timer = window.setTimeout(() => callback(...args), wait);\r\n    };\r\n\r\n  const isFieldWatched = (name: FieldPath<TFieldValues>) =>\r\n    _names.watchAll ||\r\n    _names.watch.has(name) ||\r\n    _names.watch.has((name.match(/\\w+/) || [])[0]);\r\n\r\n  const updateErrorState = (name: InternalFieldName, error: FieldError) => {\r\n    set(_formState.errors, name, error);\r\n\r\n    _subjects.state.next({\r\n      errors: _formState.errors,\r\n    });\r\n  };\r\n\r\n  const shouldRenderBaseOnError = async (\r\n    shouldSkipRender: boolean,\r\n    name: InternalFieldName,\r\n    error?: FieldError,\r\n    fieldState?: {\r\n      dirty?: FieldNamesMarkedBoolean<TFieldValues>;\r\n      isDirty?: boolean;\r\n      touched?: FieldNamesMarkedBoolean<TFieldValues>;\r\n    },\r\n    isValidFromResolver?: boolean,\r\n    isWatched?: boolean,\r\n  ): Promise<void> => {\r\n    const previousError = get(_formState.errors, name);\r\n    const isValid = !!(\r\n      _proxyFormState.isValid &&\r\n      (formOptions.resolver ? isValidFromResolver : _updateValid())\r\n    );\r\n\r\n    if (props.delayError && error) {\r\n      _delayCallback =\r\n        _delayCallback || debounce(updateErrorState, props.delayError);\r\n\r\n      _delayCallback(name, error);\r\n    } else {\r\n      clearTimeout(_timer);\r\n      error\r\n        ? set(_formState.errors, name, error)\r\n        : unset(_formState.errors, name);\r\n    }\r\n\r\n    if (\r\n      (isWatched ||\r\n        (error ? !deepEqual(previousError, error) : previousError) ||\r\n        !isEmptyObject(fieldState) ||\r\n        (formOptions.resolver && _formState.isValid !== isValid)) &&\r\n      !shouldSkipRender\r\n    ) {\r\n      const updatedFormState = {\r\n        ...fieldState,\r\n        ...(_proxyFormState.isValid && formOptions.resolver ? { isValid } : {}),\r\n        errors: _formState.errors,\r\n        name,\r\n      };\r\n\r\n      _formState = {\r\n        ..._formState,\r\n        ...updatedFormState,\r\n      };\r\n\r\n      _subjects.state.next(isWatched ? { name } : updatedFormState);\r\n    }\r\n\r\n    _validateCount[name]--;\r\n\r\n    if (!_validateCount[name]) {\r\n      _subjects.state.next({\r\n        isValidating: false,\r\n      });\r\n      _validateCount = {};\r\n    }\r\n  };\r\n\r\n  const setFieldValue = (\r\n    name: InternalFieldName,\r\n    value: SetFieldValue<TFieldValues>,\r\n    options: SetValueConfig = {},\r\n    shouldRender?: boolean,\r\n  ) => {\r\n    const field: Field = get(_fields, name);\r\n\r\n    if (field) {\r\n      const _f = field._f;\r\n\r\n      if (_f) {\r\n        set(_formValues, name, getFieldValueAs(value, _f));\r\n\r\n        const fieldValue =\r\n          isWeb && isHTMLElement(_f.ref) && isNullOrUndefined(value)\r\n            ? ''\r\n            : value;\r\n\r\n        if (isFileInput(_f.ref) && !isString(fieldValue)) {\r\n          _f.ref.files = fieldValue as FileList;\r\n        } else if (isMultipleSelect(_f.ref)) {\r\n          [..._f.ref.options].forEach(\r\n            (selectRef) =>\r\n              (selectRef.selected = (\r\n                fieldValue as InternalFieldName[]\r\n              ).includes(selectRef.value)),\r\n          );\r\n        } else if (_f.refs) {\r\n          if (isCheckBoxInput(_f.ref)) {\r\n            _f.refs.length > 1\r\n              ? _f.refs.forEach(\r\n                  (checkboxRef) =>\r\n                    (checkboxRef.checked = Array.isArray(fieldValue)\r\n                      ? !!(fieldValue as []).find(\r\n                          (data: string) => data === checkboxRef.value,\r\n                        )\r\n                      : fieldValue === checkboxRef.value),\r\n                )\r\n              : (_f.refs[0].checked = !!fieldValue);\r\n          } else {\r\n            _f.refs.forEach(\r\n              (radioRef: HTMLInputElement) =>\r\n                (radioRef.checked = radioRef.value === fieldValue),\r\n            );\r\n          }\r\n        } else {\r\n          _f.ref.value = fieldValue;\r\n        }\r\n\r\n        if (shouldRender) {\r\n          _subjects.control.next({\r\n            values: getValues(),\r\n            name,\r\n          });\r\n        }\r\n\r\n        (options.shouldDirty || options.shouldTouch) &&\r\n          updateTouchAndDirtyState(name, fieldValue, options.shouldTouch);\r\n        options.shouldValidate && trigger(name as Path<TFieldValues>);\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateTouchAndDirtyState = (\r\n    name: InternalFieldName,\r\n    inputValue: unknown,\r\n    isCurrentTouched?: boolean,\r\n    shouldRender = true,\r\n  ): Partial<\r\n    Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\r\n  > => {\r\n    const state: Partial<FormState<TFieldValues>> & { name: string } = {\r\n      name,\r\n    };\r\n    let isChanged = false;\r\n\r\n    if (_proxyFormState.isDirty) {\r\n      const previousIsDirty = _formState.isDirty;\r\n      _formState.isDirty = _getIsDirty();\r\n      state.isDirty = _formState.isDirty;\r\n      isChanged = previousIsDirty !== state.isDirty;\r\n    }\r\n\r\n    if (_proxyFormState.dirtyFields && !isCurrentTouched) {\r\n      const isPreviousFieldDirty = get(_formState.dirtyFields, name);\r\n      const isCurrentFieldDirty = !deepEqual(\r\n        get(_defaultValues, name),\r\n        inputValue,\r\n      );\r\n      isCurrentFieldDirty\r\n        ? set(_formState.dirtyFields, name, true)\r\n        : unset(_formState.dirtyFields, name);\r\n      state.dirtyFields = _formState.dirtyFields;\r\n      isChanged =\r\n        isChanged || isPreviousFieldDirty !== get(_formState.dirtyFields, name);\r\n    }\r\n\r\n    const isPreviousFieldTouched = get(_formState.touchedFields, name);\r\n\r\n    if (isCurrentTouched && !isPreviousFieldTouched) {\r\n      set(_formState.touchedFields, name, isCurrentTouched);\r\n      state.touchedFields = _formState.touchedFields;\r\n      isChanged =\r\n        isChanged ||\r\n        (_proxyFormState.touchedFields &&\r\n          isPreviousFieldTouched !== isCurrentTouched);\r\n    }\r\n\r\n    isChanged && shouldRender && _subjects.state.next(state);\r\n\r\n    return isChanged ? state : {};\r\n  };\r\n\r\n  const executeResolver = async (name?: InternalFieldName[]) => {\r\n    return formOptions.resolver\r\n      ? await formOptions.resolver(\r\n          { ..._formValues } as UnpackNestedValue<TFieldValues>,\r\n          formOptions.context,\r\n          getResolverOptions(\r\n            name || _names.mount,\r\n            _fields,\r\n            formOptions.criteriaMode,\r\n            formOptions.shouldUseNativeValidation,\r\n          ),\r\n        )\r\n      : ({} as ResolverResult);\r\n  };\r\n\r\n  const executeResolverValidation = async (names?: InternalFieldName[]) => {\r\n    const { errors } = await executeResolver();\r\n\r\n    if (names) {\r\n      for (const name of names) {\r\n        const error = get(errors, name);\r\n        error\r\n          ? set(_formState.errors, name, error)\r\n          : unset(_formState.errors, name);\r\n      }\r\n    } else {\r\n      _formState.errors = errors;\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const validateForm = async (\r\n    _fields: FieldRefs,\r\n    shouldCheckValid?: boolean,\r\n    context = {\r\n      valid: true,\r\n    },\r\n  ) => {\r\n    for (const name in _fields) {\r\n      const field = _fields[name];\r\n\r\n      if (field) {\r\n        const _f = field._f;\r\n        const val = omit(field, '_f');\r\n\r\n        if (_f) {\r\n          const fieldError = await validateField(\r\n            field,\r\n            get(_formValues, _f.name),\r\n            isValidateAllFieldCriteria,\r\n            formOptions.shouldUseNativeValidation,\r\n          );\r\n\r\n          if (shouldCheckValid) {\r\n            if (fieldError[_f.name]) {\r\n              context.valid = false;\r\n              break;\r\n            }\r\n          } else {\r\n            if (fieldError[_f.name]) {\r\n              context.valid = false;\r\n            }\r\n            fieldError[_f.name]\r\n              ? set(_formState.errors, _f.name, fieldError[_f.name])\r\n              : unset(_formState.errors, _f.name);\r\n          }\r\n        }\r\n\r\n        val && (await validateForm(val, shouldCheckValid, context));\r\n      }\r\n    }\r\n\r\n    return context.valid;\r\n  };\r\n\r\n  const handleChange: ChangeHandler = async ({\r\n    type,\r\n    target,\r\n    target: { value, name, type: inputType },\r\n  }) => {\r\n    let error;\r\n    let isValid;\r\n    const field = get(_fields, name) as Field;\r\n\r\n    if (field) {\r\n      let inputValue = inputType ? getFieldValue(field) : undefined;\r\n      inputValue = isUndefined(inputValue) ? value : inputValue;\r\n\r\n      const isBlurEvent = type === EVENTS.BLUR;\r\n      const { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange } =\r\n        getValidationModes(formOptions.reValidateMode);\r\n\r\n      const shouldSkipValidation =\r\n        (!hasValidation(field._f, field._f.mount) &&\r\n          !formOptions.resolver &&\r\n          !get(_formState.errors, name) &&\r\n          !field._f.deps) ||\r\n        skipValidation({\r\n          isBlurEvent,\r\n          isTouched: !!get(_formState.touchedFields, name),\r\n          isSubmitted: _formState.isSubmitted,\r\n          isReValidateOnBlur,\r\n          isReValidateOnChange,\r\n          ...validationMode,\r\n        });\r\n      const isWatched =\r\n        !isBlurEvent && isFieldWatched(name as FieldPath<TFieldValues>);\r\n\r\n      if (!isUndefined(inputValue)) {\r\n        set(_formValues, name, inputValue);\r\n      }\r\n\r\n      const fieldState = updateTouchAndDirtyState(\r\n        name,\r\n        inputValue,\r\n        isBlurEvent,\r\n        false,\r\n      );\r\n\r\n      const shouldRender = !isEmptyObject(fieldState) || isWatched;\r\n\r\n      if (shouldSkipValidation) {\r\n        !isBlurEvent &&\r\n          _subjects.watch.next({\r\n            name,\r\n            type,\r\n          });\r\n        return (\r\n          shouldRender &&\r\n          _subjects.state.next(isWatched ? { name } : { ...fieldState, name })\r\n        );\r\n      }\r\n\r\n      _validateCount[name] = _validateCount[name] ? +1 : 1;\r\n\r\n      _subjects.state.next({\r\n        isValidating: true,\r\n      });\r\n\r\n      if (formOptions.resolver) {\r\n        const { errors } = await executeResolver([name]);\r\n        error = get(errors, name);\r\n\r\n        if (isCheckBoxInput(target as Ref) && !error) {\r\n          const parentNodeName = getNodeParentName(name);\r\n          const valError = get(errors, parentNodeName, {});\r\n          valError.type && valError.message && (error = valError);\r\n\r\n          if (valError || get(_formState.errors, parentNodeName)) {\r\n            name = parentNodeName;\r\n          }\r\n        }\r\n\r\n        isValid = isEmptyObject(errors);\r\n      } else {\r\n        error = (\r\n          await validateField(\r\n            field,\r\n            get(_formValues, name) as Field,\r\n            isValidateAllFieldCriteria,\r\n            formOptions.shouldUseNativeValidation,\r\n          )\r\n        )[name];\r\n      }\r\n\r\n      !isBlurEvent &&\r\n        _subjects.watch.next({\r\n          name,\r\n          type,\r\n          values: getValues(),\r\n        });\r\n\r\n      if (field._f.deps) {\r\n        trigger(field._f.deps as FieldPath<TFieldValues>[]);\r\n      }\r\n\r\n      shouldRenderBaseOnError(\r\n        false,\r\n        name,\r\n        error,\r\n        fieldState,\r\n        isValid,\r\n        isWatched,\r\n      );\r\n    }\r\n  };\r\n\r\n  const _updateValidAndInputValue = (\r\n    name: InternalFieldName,\r\n    ref?: Ref,\r\n    shouldSkipValueAs?: boolean,\r\n  ) => {\r\n    const field = get(_fields, name) as Field;\r\n\r\n    if (field) {\r\n      const fieldValue = get(_formValues, name);\r\n      const isValueUndefined = isUndefined(fieldValue);\r\n      const defaultValue = isValueUndefined\r\n        ? get(_defaultValues, name)\r\n        : fieldValue;\r\n\r\n      if (\r\n        isUndefined(defaultValue) ||\r\n        (ref && (ref as HTMLInputElement).defaultChecked) ||\r\n        shouldSkipValueAs\r\n      ) {\r\n        set(\r\n          _formValues,\r\n          name,\r\n          shouldSkipValueAs ? defaultValue : getFieldValue(field),\r\n        );\r\n      } else {\r\n        setFieldValue(name, defaultValue);\r\n      }\r\n    }\r\n\r\n    _isMounted && _proxyFormState.isValid && _updateValid();\r\n  };\r\n\r\n  const _getIsDirty: GetIsDirty = (name, data) => {\r\n    name && data && set(_formValues, name, data);\r\n\r\n    return !deepEqual({ ...getValues() }, _defaultValues);\r\n  };\r\n\r\n  const _updateValid = async () => {\r\n    const isValid = formOptions.resolver\r\n      ? isEmptyObject((await executeResolver()).errors)\r\n      : await validateForm(_fields, true);\r\n\r\n    if (isValid !== _formState.isValid) {\r\n      _formState.isValid = isValid;\r\n      _subjects.state.next({\r\n        isValid,\r\n      });\r\n    }\r\n  };\r\n\r\n  const setValues = (\r\n    name: FieldPath<TFieldValues>,\r\n    value: UnpackNestedValue<PathValue<TFieldValues, FieldPath<TFieldValues>>>,\r\n    options: SetValueConfig,\r\n  ) =>\r\n    Object.entries(value).forEach(([fieldKey, fieldValue]) => {\r\n      const fieldName = `${name}.${fieldKey}` as Path<TFieldValues>;\r\n      const field = get(_fields, fieldName);\r\n      const isFieldArray = _names.array.has(name);\r\n\r\n      (isFieldArray || !isPrimitive(fieldValue) || (field && !field._f)) &&\r\n      !isDateObject(fieldValue)\r\n        ? setValues(\r\n            fieldName,\r\n            fieldValue as SetFieldValue<TFieldValues>,\r\n            options,\r\n          )\r\n        : setFieldValue(\r\n            fieldName,\r\n            fieldValue as SetFieldValue<TFieldValues>,\r\n            options,\r\n            true,\r\n          );\r\n    });\r\n\r\n  const _getWatch: WatchInternal<TFieldValues> = (\r\n    fieldNames,\r\n    defaultValue,\r\n    isGlobal,\r\n  ) => {\r\n    const fieldValues = {\r\n      ...(_isMounted\r\n        ? _formValues\r\n        : isUndefined(defaultValue)\r\n        ? _defaultValues\r\n        : isString(fieldNames)\r\n        ? { [fieldNames]: defaultValue }\r\n        : defaultValue),\r\n    };\r\n\r\n    if (!fieldNames) {\r\n      isGlobal && (_names.watchAll = true);\r\n      return fieldValues;\r\n    }\r\n\r\n    const result = [];\r\n\r\n    for (const fieldName of convertToArrayPayload(fieldNames)) {\r\n      isGlobal && _names.watch.add(fieldName as InternalFieldName);\r\n      result.push(get(fieldValues, fieldName as InternalFieldName));\r\n    }\r\n\r\n    return Array.isArray(fieldNames) ? result : result[0];\r\n  };\r\n\r\n  const _updateValues: UpdateValues<TFieldValues> = (\r\n    defaultValues,\r\n    name = '',\r\n  ): void => {\r\n    for (const key in defaultValues) {\r\n      const value = defaultValues[key];\r\n      const fieldName = name + (name ? '.' : '') + key;\r\n      const field = get(_fields, fieldName);\r\n\r\n      if (!field || !field._f) {\r\n        if (\r\n          (isObject(value) && Object.keys(value).length) ||\r\n          (Array.isArray(value) && value.length)\r\n        ) {\r\n          _updateValues(value, fieldName);\r\n        } else if (!field) {\r\n          set(_formValues, fieldName, value);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const _updateFieldArray: BatchFieldArrayUpdate = (\r\n    keyName,\r\n    name,\r\n    method,\r\n    args,\r\n    updatedFieldArrayValuesWithKey = [],\r\n    shouldSet = true,\r\n    shouldSetFields = true,\r\n  ) => {\r\n    let output;\r\n    const updatedFieldArrayValues = omitKeys(\r\n      updatedFieldArrayValuesWithKey,\r\n      keyName,\r\n    );\r\n    _isInAction = true;\r\n\r\n    if (shouldSetFields && get(_fields, name)) {\r\n      output = method(get(_fields, name), args.argA, args.argB);\r\n      shouldSet && set(_fields, name, output);\r\n    }\r\n\r\n    output = method(get(_formValues, name), args.argA, args.argB);\r\n    shouldSet && set(_formValues, name, output);\r\n\r\n    if (Array.isArray(get(_formState.errors, name))) {\r\n      const output = method(get(_formState.errors, name), args.argA, args.argB);\r\n      shouldSet && set(_formState.errors, name, output);\r\n      unsetEmptyArray(_formState.errors, name);\r\n    }\r\n\r\n    if (_proxyFormState.touchedFields && get(_formState.touchedFields, name)) {\r\n      const output = method(\r\n        get(_formState.touchedFields, name),\r\n        args.argA,\r\n        args.argB,\r\n      );\r\n      shouldSet && set(_formState.touchedFields, name, output);\r\n      unsetEmptyArray(_formState.touchedFields, name);\r\n    }\r\n\r\n    if (_proxyFormState.dirtyFields || _proxyFormState.isDirty) {\r\n      set(\r\n        _formState.dirtyFields,\r\n        name,\r\n        setFieldArrayDirtyFields(\r\n          omitKey(updatedFieldArrayValues, keyName),\r\n          get(_defaultValues, name, []),\r\n          get(_formState.dirtyFields, name, []),\r\n        ),\r\n      );\r\n      updatedFieldArrayValues &&\r\n        set(\r\n          _formState.dirtyFields,\r\n          name,\r\n          setFieldArrayDirtyFields(\r\n            omitKey(updatedFieldArrayValues, keyName),\r\n            get(_defaultValues, name, []),\r\n            get(_formState.dirtyFields, name, []),\r\n          ),\r\n        );\r\n      unsetEmptyArray(_formState.dirtyFields, name);\r\n    }\r\n\r\n    _subjects.state.next({\r\n      isDirty: _getIsDirty(name, omitKey(updatedFieldArrayValues, keyName)),\r\n      dirtyFields: _formState.dirtyFields,\r\n      errors: _formState.errors,\r\n      isValid: _formState.isValid,\r\n    });\r\n  };\r\n\r\n  const _getFieldArrayValue = (name: InternalFieldName) =>\r\n    get(_isMounted ? _formValues : _defaultValues, name, []);\r\n\r\n  const setValue: UseFormSetValue<TFieldValues> = (\r\n    name,\r\n    value,\r\n    options = {},\r\n  ) => {\r\n    const field = get(_fields, name);\r\n    const isFieldArray = _names.array.has(name);\r\n\r\n    set(_formValues, name, value);\r\n\r\n    if (isFieldArray) {\r\n      _subjects.array.next({\r\n        name,\r\n        values: _formValues,\r\n      });\r\n\r\n      if (\r\n        (_proxyFormState.isDirty || _proxyFormState.dirtyFields) &&\r\n        options.shouldDirty\r\n      ) {\r\n        set(\r\n          _formState.dirtyFields,\r\n          name,\r\n          setFieldArrayDirtyFields(\r\n            value,\r\n            get(_defaultValues, name, []),\r\n            get(_formState.dirtyFields, name, []),\r\n          ),\r\n        );\r\n\r\n        _subjects.state.next({\r\n          name,\r\n          dirtyFields: _formState.dirtyFields,\r\n          isDirty: _getIsDirty(name, value),\r\n        });\r\n      }\r\n    } else {\r\n      field && !field._f && !isNullOrUndefined(value)\r\n        ? setValues(name, value, options)\r\n        : setFieldValue(name, value, options, true);\r\n    }\r\n\r\n    isFieldWatched(name) && _subjects.state.next({});\r\n    _subjects.watch.next({\r\n      name,\r\n    });\r\n  };\r\n\r\n  const trigger: UseFormTrigger<TFieldValues> = async (name, options = {}) => {\r\n    const fieldNames = convertToArrayPayload(name) as InternalFieldName[];\r\n    let isValid;\r\n\r\n    _subjects.state.next({\r\n      isValidating: true,\r\n    });\r\n\r\n    if (formOptions.resolver) {\r\n      const schemaResult = await executeResolverValidation(\r\n        isUndefined(name) ? name : fieldNames,\r\n      );\r\n      isValid = name\r\n        ? fieldNames.every((name) => !get(schemaResult, name))\r\n        : isEmptyObject(schemaResult);\r\n    } else {\r\n      if (name) {\r\n        isValid = (\r\n          await Promise.all(\r\n            fieldNames.map(async (fieldName) => {\r\n              const field = get(_fields, fieldName);\r\n              return await validateForm(\r\n                field._f ? { [fieldName]: field } : field,\r\n              );\r\n            }),\r\n          )\r\n        ).every(Boolean);\r\n      } else {\r\n        await validateForm(_fields);\r\n        isValid = isEmptyObject(_formState.errors);\r\n      }\r\n    }\r\n\r\n    _subjects.state.next({\r\n      ...(isString(name) ? { name } : {}),\r\n      errors: _formState.errors,\r\n      isValidating: false,\r\n    });\r\n\r\n    if (options.shouldFocus && !isValid) {\r\n      focusFieldBy(\r\n        _fields,\r\n        (key) => get(_formState.errors, key),\r\n        name ? fieldNames : _names.mount,\r\n      );\r\n    }\r\n\r\n    _proxyFormState.isValid && _updateValid();\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const getValues: UseFormGetValues<TFieldValues> = (\r\n    fieldNames?:\r\n      | FieldPath<TFieldValues>\r\n      | ReadonlyArray<FieldPath<TFieldValues>>,\r\n  ) => {\r\n    const values = {\r\n      ..._defaultValues,\r\n      ..._formValues,\r\n    };\r\n\r\n    return isUndefined(fieldNames)\r\n      ? values\r\n      : isString(fieldNames)\r\n      ? get(values, fieldNames as InternalFieldName)\r\n      : fieldNames.map((name) => get(values, name as InternalFieldName));\r\n  };\r\n\r\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\r\n    name\r\n      ? convertToArrayPayload(name).forEach((inputName) =>\r\n          unset(_formState.errors, inputName),\r\n        )\r\n      : (_formState.errors = {});\r\n\r\n    _subjects.state.next({\r\n      errors: _formState.errors,\r\n    });\r\n  };\r\n\r\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\r\n    const ref = ((get(_fields, name, { _f: {} }) as Field)._f || {}).ref;\r\n\r\n    set(_formState.errors, name, {\r\n      ...error,\r\n      ref,\r\n    });\r\n\r\n    _subjects.state.next({\r\n      name,\r\n      errors: _formState.errors,\r\n      isValid: false,\r\n    });\r\n\r\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\r\n  };\r\n\r\n  const watch: UseFormWatch<TFieldValues> = (\r\n    fieldName?:\r\n      | FieldPath<TFieldValues>\r\n      | ReadonlyArray<FieldPath<TFieldValues>>\r\n      | WatchObserver<TFieldValues>,\r\n    defaultValue?: unknown,\r\n  ) =>\r\n    isFunction(fieldName)\r\n      ? _subjects.watch.subscribe({\r\n          next: (info: any) =>\r\n            fieldName(\r\n              _getWatch(\r\n                undefined,\r\n                defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>,\r\n              ) as UnpackNestedValue<TFieldValues>,\r\n              info,\r\n            ),\r\n        })\r\n      : _getWatch(\r\n          fieldName as InternalFieldName | InternalFieldName[],\r\n          defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>,\r\n          true,\r\n        );\r\n\r\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\r\n    for (const inputName of name ? convertToArrayPayload(name) : _names.mount) {\r\n      _names.mount.delete(inputName);\r\n      _names.array.delete(inputName);\r\n\r\n      if (get(_fields, inputName) as Field) {\r\n        if (!options.keepValue) {\r\n          unset(_fields, inputName);\r\n          unset(_formValues, inputName);\r\n        }\r\n\r\n        !options.keepError && unset(_formState.errors, inputName);\r\n        !options.keepDirty && unset(_formState.dirtyFields, inputName);\r\n        !options.keepTouched && unset(_formState.touchedFields, inputName);\r\n        !formOptions.shouldUnregister &&\r\n          !options.keepDefaultValue &&\r\n          unset(_defaultValues, inputName);\r\n      }\r\n    }\r\n\r\n    _subjects.watch.next({});\r\n\r\n    _subjects.state.next({\r\n      ..._formState,\r\n      ...(!options.keepDirty ? {} : { isDirty: _getIsDirty() }),\r\n    });\r\n    !options.keepIsValid && _updateValid();\r\n  };\r\n\r\n  const registerFieldRef = (\r\n    name: InternalFieldName,\r\n    fieldRef: HTMLInputElement,\r\n    options?: RegisterOptions,\r\n  ): ((name: InternalFieldName) => void) | void => {\r\n    register(name as FieldPath<TFieldValues>, options);\r\n    let field: Field = get(_fields, name);\r\n    const ref = isUndefined(fieldRef.value)\r\n      ? fieldRef.querySelectorAll\r\n        ? (fieldRef.querySelectorAll('input,select,textarea')[0] as Ref) ||\r\n          fieldRef\r\n        : fieldRef\r\n      : fieldRef;\r\n\r\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\r\n\r\n    if (\r\n      ref === field._f.ref ||\r\n      (isRadioOrCheckbox &&\r\n        compact(field._f.refs || []).find((option) => option === ref))\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    field = {\r\n      _f: isRadioOrCheckbox\r\n        ? {\r\n            ...field._f,\r\n            refs: [\r\n              ...compact(field._f.refs || []).filter(\r\n                (ref) => isHTMLElement(ref) && document.contains(ref),\r\n              ),\r\n              ref,\r\n            ],\r\n            ref: { type: ref.type, name },\r\n          }\r\n        : {\r\n            ...field._f,\r\n            ref,\r\n          },\r\n    };\r\n\r\n    set(_fields, name, field);\r\n\r\n    _updateValidAndInputValue(name, ref);\r\n  };\r\n\r\n  const register: UseFormRegister<TFieldValues> = (name, options = {}) => {\r\n    const field = get(_fields, name);\r\n\r\n    set(_fields, name, {\r\n      _f: {\r\n        ...(field && field._f ? field._f : { ref: { name } }),\r\n        name,\r\n        mount: true,\r\n        ...options,\r\n      },\r\n    });\r\n\r\n    if (options.value) {\r\n      set(_formValues, name, options.value);\r\n    }\r\n\r\n    if (\r\n      !isUndefined(options.disabled) &&\r\n      field &&\r\n      field._f &&\r\n      field._f.ref.disabled !== options.disabled\r\n    ) {\r\n      set(_formValues, name, options.disabled ? undefined : field._f.ref.value);\r\n    }\r\n\r\n    _names.mount.add(name);\r\n    !field && _updateValidAndInputValue(name, undefined, true);\r\n\r\n    return isWindowUndefined\r\n      ? ({ name: name as InternalFieldName } as UseFormRegisterReturn)\r\n      : {\r\n          name,\r\n          ...(isUndefined(options.disabled)\r\n            ? {}\r\n            : { disabled: options.disabled }),\r\n          onChange: handleChange,\r\n          onBlur: handleChange,\r\n          ref: (ref: HTMLInputElement | null): void => {\r\n            if (ref) {\r\n              registerFieldRef(name, ref, options);\r\n            } else {\r\n              const field = get(_fields, name, {}) as Field;\r\n              const _shouldUnregister =\r\n                formOptions.shouldUnregister || options.shouldUnregister;\r\n\r\n              if (field._f) {\r\n                field._f.mount = false;\r\n              }\r\n\r\n              _shouldUnregister &&\r\n                !(isNameInFieldArray(_names.array, name) && _isInAction) &&\r\n                _names.unMount.add(name);\r\n            }\r\n          },\r\n        };\r\n  };\r\n\r\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> =\r\n    (onValid, onInvalid) => async (e) => {\r\n      if (e) {\r\n        e.preventDefault && e.preventDefault();\r\n        e.persist && e.persist();\r\n      }\r\n      let hasNoPromiseError = true;\r\n      let fieldValues: any = { ..._formValues };\r\n\r\n      _subjects.state.next({\r\n        isSubmitting: true,\r\n      });\r\n\r\n      try {\r\n        if (formOptions.resolver) {\r\n          const { errors, values } = await executeResolver();\r\n          _formState.errors = errors;\r\n          fieldValues = values;\r\n        } else {\r\n          await validateForm(_fields);\r\n        }\r\n\r\n        if (\r\n          isEmptyObject(_formState.errors) &&\r\n          Object.keys(_formState.errors).every((name) => get(fieldValues, name))\r\n        ) {\r\n          _subjects.state.next({\r\n            errors: {},\r\n            isSubmitting: true,\r\n          });\r\n          await onValid(fieldValues, e);\r\n        } else {\r\n          onInvalid && (await onInvalid(_formState.errors, e));\r\n          formOptions.shouldFocusError &&\r\n            focusFieldBy(\r\n              _fields,\r\n              (key) => get(_formState.errors, key),\r\n              _names.mount,\r\n            );\r\n        }\r\n      } catch (err) {\r\n        hasNoPromiseError = false;\r\n        throw err;\r\n      } finally {\r\n        _formState.isSubmitted = true;\r\n        _subjects.state.next({\r\n          isSubmitted: true,\r\n          isSubmitting: false,\r\n          isSubmitSuccessful:\r\n            isEmptyObject(_formState.errors) && hasNoPromiseError,\r\n          submitCount: _formState.submitCount + 1,\r\n          errors: _formState.errors,\r\n        });\r\n      }\r\n    };\r\n\r\n  const reset: UseFormReset<TFieldValues> = (\r\n    formValues,\r\n    keepStateOptions = {},\r\n  ) => {\r\n    const updatedValues = formValues || _defaultValues;\r\n    const values = cloneObject(updatedValues);\r\n\r\n    _formValues = values;\r\n\r\n    if (isWeb && !keepStateOptions.keepValues) {\r\n      for (const name of _names.mount) {\r\n        const field = get(_fields, name);\r\n        if (field && field._f) {\r\n          const inputRef = Array.isArray(field._f.refs)\r\n            ? field._f.refs[0]\r\n            : field._f.ref;\r\n\r\n          try {\r\n            isHTMLElement(inputRef) && inputRef.closest('form')!.reset();\r\n            break;\r\n          } catch {}\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!keepStateOptions.keepDefaultValues) {\r\n      _defaultValues = { ...updatedValues };\r\n    }\r\n\r\n    if (!keepStateOptions.keepValues) {\r\n      _fields = {};\r\n\r\n      _subjects.control.next({\r\n        values: keepStateOptions.keepDefaultValues\r\n          ? _defaultValues\r\n          : { ...updatedValues },\r\n      });\r\n\r\n      _subjects.watch.next({});\r\n\r\n      _subjects.array.next({\r\n        values,\r\n      });\r\n    }\r\n\r\n    _names = {\r\n      mount: new Set(),\r\n      unMount: new Set(),\r\n      array: new Set(),\r\n      watch: new Set(),\r\n      watchAll: false,\r\n      focus: '',\r\n    };\r\n\r\n    _subjects.state.next({\r\n      submitCount: keepStateOptions.keepSubmitCount\r\n        ? _formState.submitCount\r\n        : 0,\r\n      resetCount: (_formState.resetCount += 1),\r\n      isDirty: keepStateOptions.keepDirty\r\n        ? _formState.isDirty\r\n        : keepStateOptions.keepDefaultValues\r\n        ? deepEqual(formValues, _defaultValues)\r\n        : false,\r\n      isSubmitted: keepStateOptions.keepIsSubmitted\r\n        ? _formState.isSubmitted\r\n        : false,\r\n      dirtyFields: keepStateOptions.keepDirty ? _formState.dirtyFields : {},\r\n      touchedFields: keepStateOptions.keepTouched\r\n        ? _formState.touchedFields\r\n        : {},\r\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\r\n      isSubmitting: false,\r\n      isSubmitSuccessful: false,\r\n    });\r\n\r\n    _isMounted = !!keepStateOptions.keepIsValid;\r\n  };\r\n\r\n  const setFocus: UseFormSetFocus<TFieldValues> = (name) =>\r\n    get(_fields, name)._f.ref.focus();\r\n\r\n  const _removeFields = () => {\r\n    for (const name of _names.unMount) {\r\n      const field = get(_fields, name) as Field;\r\n\r\n      field &&\r\n        (field._f.refs ? field._f.refs.every(live) : live(field._f.ref)) &&\r\n        unregister(name as FieldPath<TFieldValues>);\r\n    }\r\n\r\n    _names.unMount = new Set();\r\n  };\r\n\r\n  return {\r\n    control: {\r\n      register,\r\n      unregister,\r\n      _getWatch,\r\n      _getIsDirty,\r\n      _updateValid,\r\n      _updateValues,\r\n      _removeFields,\r\n      _updateFieldArray,\r\n      _getFieldArrayValue,\r\n      _subjects,\r\n      _shouldUnregister: formOptions.shouldUnregister,\r\n      _fields,\r\n      _proxyFormState,\r\n      get _formValues() {\r\n        return _formValues;\r\n      },\r\n      set _formValues(value) {\r\n        _formValues = value;\r\n      },\r\n      get _isMounted() {\r\n        return _isMounted;\r\n      },\r\n      set _isMounted(value) {\r\n        _isMounted = value;\r\n      },\r\n      get _defaultValues() {\r\n        return _defaultValues;\r\n      },\r\n      set _defaultValues(value) {\r\n        _defaultValues = value;\r\n      },\r\n      get _names() {\r\n        return _names;\r\n      },\r\n      set _names(value) {\r\n        _names = value;\r\n      },\r\n      _isInAction: {\r\n        get val() {\r\n          return _isInAction;\r\n        },\r\n        set val(value) {\r\n          _isInAction = value;\r\n        },\r\n      },\r\n      _formState: {\r\n        get val() {\r\n          return _formState;\r\n        },\r\n        set val(value) {\r\n          _formState = value;\r\n        },\r\n      },\r\n      _updateProps: (options) => {\r\n        formOptions = { ...defaultOptions, ...options };\r\n      },\r\n    },\r\n    trigger,\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    setValue,\r\n    getValues,\r\n    reset,\r\n    clearErrors,\r\n    unregister,\r\n    setError,\r\n    setFocus,\r\n  };\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { createFormControl } from './logic/createFormControl';\r\nimport getProxyFormState from './logic/getProxyFormState';\r\nimport shouldRenderFormState from './logic/shouldRenderFormState';\r\nimport { FieldValues, FormState, UseFormProps, UseFormReturn } from './types';\r\n\r\nexport function useForm<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TContext extends object = object,\r\n>(\r\n  props: UseFormProps<TFieldValues, TContext> = {},\r\n): UseFormReturn<TFieldValues, TContext> {\r\n  const _formControl = React.useRef<\r\n    UseFormReturn<TFieldValues, TContext> | undefined\r\n  >();\r\n  const [formState, updateFormState] = React.useState<FormState<TFieldValues>>({\r\n    isDirty: false,\r\n    isValidating: false,\r\n    dirtyFields: {},\r\n    isSubmitted: false,\r\n    submitCount: 0,\r\n    resetCount: 0,\r\n    touchedFields: {},\r\n    isSubmitting: false,\r\n    isSubmitSuccessful: false,\r\n    isValid: false,\r\n    errors: {},\r\n  });\r\n\r\n  if (_formControl.current) {\r\n    _formControl.current.control._updateProps(props);\r\n  } else {\r\n    _formControl.current = {\r\n      ...createFormControl(props),\r\n      formState,\r\n    };\r\n  }\r\n\r\n  const control = _formControl.current.control;\r\n\r\n  React.useEffect(() => {\r\n    const formStateSubscription = control._subjects.state.subscribe({\r\n      next(formState) {\r\n        if (shouldRenderFormState(formState, control._proxyFormState, true)) {\r\n          control._formState.val = {\r\n            ...control._formState.val,\r\n            ...formState,\r\n          };\r\n\r\n          updateFormState({ ...control._formState.val });\r\n        }\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      formStateSubscription.unsubscribe();\r\n    };\r\n  }, [control]);\r\n\r\n  React.useEffect(() => {\r\n    if (!control._isMounted) {\r\n      control._isMounted = true;\r\n      control._proxyFormState.isValid && control._updateValid();\r\n      !props.shouldUnregister && control._updateValues(control._defaultValues);\r\n    }\r\n    control._removeFields();\r\n  });\r\n\r\n  _formControl.current.formState = getProxyFormState(\r\n    formState,\r\n    control._proxyFormState,\r\n  );\r\n\r\n  return _formControl.current;\r\n}\r\n","import * as React from 'react';\r\n\r\nimport convertToArrayPayload from './utils/convertToArrayPayload';\r\nimport isObject from './utils/isObject';\r\nimport isUndefined from './utils/isUndefined';\r\nimport {\r\n  Control,\r\n  DeepPartial,\r\n  FieldPath,\r\n  FieldPathValue,\r\n  FieldPathValues,\r\n  FieldValues,\r\n  InternalFieldName,\r\n  UnpackNestedValue,\r\n  UseWatchProps,\r\n} from './types';\r\nimport { useFormContext } from './useFormContext';\r\n\r\nexport function useWatch<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n>(props: {\r\n  defaultValue?: UnpackNestedValue<DeepPartial<TFieldValues>>;\r\n  control?: Control<TFieldValues>;\r\n  disabled?: boolean;\r\n}): UnpackNestedValue<DeepPartial<TFieldValues>>;\r\nexport function useWatch<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TFieldName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\r\n>(props: {\r\n  name: TFieldName;\r\n  defaultValue?: FieldPathValue<TFieldValues, TFieldName>;\r\n  control?: Control<TFieldValues>;\r\n  disabled?: boolean;\r\n}): FieldPathValue<TFieldValues, TFieldName>;\r\nexport function useWatch<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TFieldNames extends FieldPath<TFieldValues>[] = FieldPath<TFieldValues>[],\r\n>(props: {\r\n  name: readonly [...TFieldNames];\r\n  defaultValue?: UnpackNestedValue<DeepPartial<TFieldValues>>;\r\n  control?: Control<TFieldValues>;\r\n  disabled?: boolean;\r\n}): FieldPathValues<TFieldValues, TFieldNames>;\r\nexport function useWatch<TFieldValues>(props?: UseWatchProps<TFieldValues>) {\r\n  const methods = useFormContext();\r\n  const {\r\n    control = methods.control,\r\n    name,\r\n    defaultValue,\r\n    disabled,\r\n  } = props || {};\r\n  const _name = React.useRef(name);\r\n  _name.current = name;\r\n\r\n  const [value, updateValue] = React.useState<unknown>(\r\n    isUndefined(defaultValue)\r\n      ? control._getWatch(name as InternalFieldName)\r\n      : defaultValue,\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const watchSubscription = control._subjects.watch.subscribe({\r\n      next: ({ name }) => {\r\n        if (\r\n          !_name.current ||\r\n          !name ||\r\n          convertToArrayPayload(_name.current).some(\r\n            (fieldName) =>\r\n              name &&\r\n              fieldName &&\r\n              (fieldName.startsWith(name as InternalFieldName) ||\r\n                name.startsWith(fieldName as InternalFieldName)),\r\n          )\r\n        ) {\r\n          const result = control._getWatch(\r\n            _name.current as InternalFieldName,\r\n            defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>,\r\n          );\r\n          updateValue(\r\n            isObject(result)\r\n              ? { ...result }\r\n              : Array.isArray(result)\r\n              ? [...result]\r\n              : result,\r\n          );\r\n        }\r\n      },\r\n    });\r\n\r\n    disabled && watchSubscription.unsubscribe();\r\n\r\n    return () => watchSubscription.unsubscribe();\r\n  }, [disabled, control, defaultValue]);\r\n\r\n  React.useEffect(() => {\r\n    control._removeFields();\r\n  });\r\n\r\n  return value;\r\n}\r\n"],"names":["append","appendAt","prepend","prependAt","insert","insertAt","isCheckBox","omitKeys"],"mappings":"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"}